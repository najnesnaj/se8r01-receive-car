                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Jul 11 2014) (Linux)
                                      4 ; This file was generated Sun Feb 11 11:38:08 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module se8r01_receive_car
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _Init_Tim2
                                     14 	.globl _SE8R01_Init
                                     15 	.globl _SE8R01_Analog_Init
                                     16 	.globl _SE8R01_Calibration
                                     17 	.globl _rf_switch_bank
                                     18 	.globl _init_io
                                     19 	.globl _InitializeUART
                                     20 	.globl _print_UCHAR_hex
                                     21 	.globl _UARTPrintF
                                     22 	.globl _delay
                                     23 	.globl _InitializeSystemClock
                                     24 	.globl _InitializeSPI
                                     25 	.globl _read_spi_buf
                                     26 	.globl _write_spi_buf
                                     27 	.globl _read_spi_reg
                                     28 	.globl _write_spi_reg
                                     29 	.globl _write_spi
                                     30 	.globl _delayTenMicro
                                     31 	.globl _memset
                                     32 	.globl _tx_buf
                                     33 	.globl _rx_buf
                                     34 	.globl _ADDRESS0
                                     35 	.globl _ADDRESS1
                                     36 	.globl _ADDRESS5
                                     37 	.globl _ADDRESS4
                                     38 	.globl _ADDRESS3
                                     39 	.globl _ADDRESS2
                                     40 	.globl _TX_ADDRESS
                                     41 	.globl _status
                                     42 	.globl _pip
                                     43 	.globl _signal_lv
                                     44 	.globl _newdata
                                     45 	.globl _pload_width_now
                                     46 	.globl _SE8R01_DR_500K
                                     47 	.globl _SE8R01_DR_1M
                                     48 	.globl _SE8R01_DR_2M
                                     49 	.globl _myData_pip4
                                     50 	.globl _myData_pip5
                                     51 	.globl _gtemp
                                     52 ;--------------------------------------------------------
                                     53 ; ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area DATA
      000000                         56 _gtemp::
      000000                         57 	.ds 5
      000005                         58 _myData_pip5::
      000005                         59 	.ds 5
      00000A                         60 _myData_pip4::
      00000A                         61 	.ds 5
                                     62 ;--------------------------------------------------------
                                     63 ; ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area INITIALIZED
      000000                         66 _SE8R01_DR_2M::
      000000                         67 	.ds 2
      000002                         68 _SE8R01_DR_1M::
      000002                         69 	.ds 2
      000004                         70 _SE8R01_DR_500K::
      000004                         71 	.ds 2
      000006                         72 _pload_width_now::
      000006                         73 	.ds 2
      000008                         74 _newdata::
      000008                         75 	.ds 2
      00000A                         76 _signal_lv::
      00000A                         77 	.ds 1
      00000B                         78 _pip::
      00000B                         79 	.ds 2
      00000D                         80 _status::
      00000D                         81 	.ds 1
      00000E                         82 _TX_ADDRESS::
      00000E                         83 	.ds 4
      000012                         84 _ADDRESS2::
      000012                         85 	.ds 1
      000013                         86 _ADDRESS3::
      000013                         87 	.ds 1
      000014                         88 _ADDRESS4::
      000014                         89 	.ds 1
      000015                         90 _ADDRESS5::
      000015                         91 	.ds 1
      000016                         92 _ADDRESS1::
      000016                         93 	.ds 4
      00001A                         94 _ADDRESS0::
      00001A                         95 	.ds 4
      00001E                         96 _rx_buf::
      00001E                         97 	.ds 32
      00003E                         98 _tx_buf::
      00003E                         99 	.ds 32
                                    100 ;--------------------------------------------------------
                                    101 ; Stack segment in internal ram 
                                    102 ;--------------------------------------------------------
                                    103 	.area	SSEG
      000000                        104 __start__stack:
      000000                        105 	.ds	1
                                    106 
                                    107 ;--------------------------------------------------------
                                    108 ; absolute external ram data
                                    109 ;--------------------------------------------------------
                                    110 	.area DABS (ABS)
                                    111 ;--------------------------------------------------------
                                    112 ; interrupt vector 
                                    113 ;--------------------------------------------------------
                                    114 	.area HOME
      000000                        115 __interrupt_vect:
      000000 82v00u00u00            116 	int s_GSINIT ;reset
      000004 82 00 00 00            117 	int 0x0000 ;trap
      000008 82 00 00 00            118 	int 0x0000 ;int0
      00000C 82 00 00 00            119 	int 0x0000 ;int1
      000010 82 00 00 00            120 	int 0x0000 ;int2
      000014 82 00 00 00            121 	int 0x0000 ;int3
      000018 82 00 00 00            122 	int 0x0000 ;int4
      00001C 82 00 00 00            123 	int 0x0000 ;int5
      000020 82 00 00 00            124 	int 0x0000 ;int6
      000024 82 00 00 00            125 	int 0x0000 ;int7
      000028 82 00 00 00            126 	int 0x0000 ;int8
      00002C 82 00 00 00            127 	int 0x0000 ;int9
      000030 82 00 00 00            128 	int 0x0000 ;int10
      000034 82 00 00 00            129 	int 0x0000 ;int11
      000038 82 00 00 00            130 	int 0x0000 ;int12
      00003C 82 00 00 00            131 	int 0x0000 ;int13
      000040 82 00 00 00            132 	int 0x0000 ;int14
      000044 82 00 00 00            133 	int 0x0000 ;int15
      000048 82 00 00 00            134 	int 0x0000 ;int16
      00004C 82 00 00 00            135 	int 0x0000 ;int17
      000050 82 00 00 00            136 	int 0x0000 ;int18
      000054 82 00 00 00            137 	int 0x0000 ;int19
      000058 82 00 00 00            138 	int 0x0000 ;int20
      00005C 82 00 00 00            139 	int 0x0000 ;int21
      000060 82 00 00 00            140 	int 0x0000 ;int22
      000064 82 00 00 00            141 	int 0x0000 ;int23
      000068 82 00 00 00            142 	int 0x0000 ;int24
      00006C 82 00 00 00            143 	int 0x0000 ;int25
      000070 82 00 00 00            144 	int 0x0000 ;int26
      000074 82 00 00 00            145 	int 0x0000 ;int27
      000078 82 00 00 00            146 	int 0x0000 ;int28
      00007C 82 00 00 00            147 	int 0x0000 ;int29
                                    148 ;--------------------------------------------------------
                                    149 ; global & static initialisations
                                    150 ;--------------------------------------------------------
                                    151 	.area HOME
                                    152 	.area GSINIT
                                    153 	.area GSFINAL
                                    154 	.area GSINIT
      000000                        155 __sdcc_gs_init_startup:
      000000                        156 __sdcc_init_data:
                                    157 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  158 	ldw x, #l_DATA
      000003 27 07            [ 1]  159 	jreq	00002$
      000005                        160 00001$:
      000005 72 4FuFFuFF      [ 1]  161 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  162 	decw x
      00000A 26 F9            [ 1]  163 	jrne	00001$
      00000C                        164 00002$:
      00000C AEr00r00         [ 2]  165 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  166 	jreq	00004$
      000011                        167 00003$:
      000011 D6uFFuFF         [ 1]  168 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  169 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  170 	decw	x
      000018 26 F7            [ 1]  171 	jrne	00003$
      00001A                        172 00004$:
                                    173 ; stm8_genXINIT() end
                                    174 	.area GSFINAL
      000000 CCr00r80         [ 2]  175 	jp	__sdcc_program_startup
                                    176 ;--------------------------------------------------------
                                    177 ; Home
                                    178 ;--------------------------------------------------------
                                    179 	.area HOME
                                    180 	.area HOME
      000080                        181 __sdcc_program_startup:
      000080 CCr07r7A         [ 2]  182 	jp	_main
                                    183 ;	return from main will return to caller
                                    184 ;--------------------------------------------------------
                                    185 ; code
                                    186 ;--------------------------------------------------------
                                    187 	.area CODE
                                    188 ;	se8r01-receive-car.c: 53: void delayTenMicro (void) {
                                    189 ;	-----------------------------------------
                                    190 ;	 function delayTenMicro
                                    191 ;	-----------------------------------------
      000000                        192 _delayTenMicro:
                                    193 ;	se8r01-receive-car.c: 55: for (a = 0; a < 50; ++a)
      000000 A6 32            [ 1]  194 	ld	a, #0x32
      000002                        195 00104$:
                                    196 ;	se8r01-receive-car.c: 56: __asm__("nop");
      000002 9D               [ 1]  197 	nop
      000003 4A               [ 1]  198 	dec	a
                                    199 ;	se8r01-receive-car.c: 55: for (a = 0; a < 50; ++a)
      000004 4D               [ 1]  200 	tnz	a
      000005 26 FB            [ 1]  201 	jrne	00104$
      000007 81               [ 4]  202 	ret
                                    203 ;	se8r01-receive-car.c: 58: UCHAR write_spi (UCHAR value) {
                                    204 ;	-----------------------------------------
                                    205 ;	 function write_spi
                                    206 ;	-----------------------------------------
      000008                        207 _write_spi:
                                    208 ;	se8r01-receive-car.c: 60: delayTenMicro ();
      000008 CDr00r00         [ 4]  209 	call	_delayTenMicro
                                    210 ;	se8r01-receive-car.c: 61: SPI_DR = value;
      00000B AE 52 04         [ 2]  211 	ldw	x, #0x5204
      00000E 7B 03            [ 1]  212 	ld	a, (0x03, sp)
      000010 F7               [ 1]  213 	ld	(x), a
                                    214 ;	se8r01-receive-car.c: 62: delayTenMicro ();
      000011 CDr00r00         [ 4]  215 	call	_delayTenMicro
                                    216 ;	se8r01-receive-car.c: 63: while ((SPI_SR & TXE) == 0);
      000014                        217 00101$:
      000014 AE 52 03         [ 2]  218 	ldw	x, #0x5203
      000017 F6               [ 1]  219 	ld	a, (x)
      000018 A5 02            [ 1]  220 	bcp	a, #0x02
      00001A 27 F8            [ 1]  221 	jreq	00101$
                                    222 ;	se8r01-receive-car.c: 64: delayTenMicro ();
      00001C CDr00r00         [ 4]  223 	call	_delayTenMicro
                                    224 ;	se8r01-receive-car.c: 65: while ((SPI_SR & RXNE) == 0);
      00001F                        225 00104$:
      00001F AE 52 03         [ 2]  226 	ldw	x, #0x5203
      000022 F6               [ 1]  227 	ld	a, (x)
      000023 44               [ 1]  228 	srl	a
      000024 24 F9            [ 1]  229 	jrnc	00104$
                                    230 ;	se8r01-receive-car.c: 66: delayTenMicro ();
      000026 CDr00r00         [ 4]  231 	call	_delayTenMicro
                                    232 ;	se8r01-receive-car.c: 67: ret = SPI_DR;
      000029 AE 52 04         [ 2]  233 	ldw	x, #0x5204
      00002C F6               [ 1]  234 	ld	a, (x)
                                    235 ;	se8r01-receive-car.c: 68: return (ret);
      00002D 81               [ 4]  236 	ret
                                    237 ;	se8r01-receive-car.c: 70: UCHAR write_spi_reg (UCHAR reg, UCHAR value) {
                                    238 ;	-----------------------------------------
                                    239 ;	 function write_spi_reg
                                    240 ;	-----------------------------------------
      00002E                        241 _write_spi_reg:
      00002E 88               [ 1]  242 	push	a
                                    243 ;	se8r01-receive-car.c: 72: PC_ODR &= ~(1 << CSN);
      00002F AE 50 0A         [ 2]  244 	ldw	x, #0x500a
      000032 F6               [ 1]  245 	ld	a, (x)
      000033 A4 EF            [ 1]  246 	and	a, #0xef
      000035 F7               [ 1]  247 	ld	(x), a
                                    248 ;	se8r01-receive-car.c: 73: ret = write_spi (reg);
      000036 7B 04            [ 1]  249 	ld	a, (0x04, sp)
      000038 88               [ 1]  250 	push	a
      000039 CDr00r08         [ 4]  251 	call	_write_spi
      00003C 5B 01            [ 2]  252 	addw	sp, #1
      00003E 6B 01            [ 1]  253 	ld	(0x01, sp), a
                                    254 ;	se8r01-receive-car.c: 74: if (reg != NOP && reg != FLUSH_RX && reg != FLUSH_TX)
      000040 7B 04            [ 1]  255 	ld	a, (0x04, sp)
      000042 A1 FF            [ 1]  256 	cp	a, #0xff
      000044 27 15            [ 1]  257 	jreq	00102$
      000046 7B 04            [ 1]  258 	ld	a, (0x04, sp)
      000048 A1 E2            [ 1]  259 	cp	a, #0xe2
      00004A 27 0F            [ 1]  260 	jreq	00102$
      00004C 7B 04            [ 1]  261 	ld	a, (0x04, sp)
      00004E A1 E1            [ 1]  262 	cp	a, #0xe1
      000050 27 09            [ 1]  263 	jreq	00102$
                                    264 ;	se8r01-receive-car.c: 75: write_spi (value);
      000052 7B 05            [ 1]  265 	ld	a, (0x05, sp)
      000054 88               [ 1]  266 	push	a
      000055 CDr00r08         [ 4]  267 	call	_write_spi
      000058 84               [ 1]  268 	pop	a
      000059 20 03            [ 2]  269 	jra	00103$
      00005B                        270 00102$:
                                    271 ;	se8r01-receive-car.c: 77: delayTenMicro ();
      00005B CDr00r00         [ 4]  272 	call	_delayTenMicro
      00005E                        273 00103$:
                                    274 ;	se8r01-receive-car.c: 78: PC_ODR |= (1 << CSN);
      00005E AE 50 0A         [ 2]  275 	ldw	x, #0x500a
      000061 F6               [ 1]  276 	ld	a, (x)
      000062 AA 10            [ 1]  277 	or	a, #0x10
      000064 F7               [ 1]  278 	ld	(x), a
                                    279 ;	se8r01-receive-car.c: 79: return (ret);
      000065 7B 01            [ 1]  280 	ld	a, (0x01, sp)
      000067 5B 01            [ 2]  281 	addw	sp, #1
      000069 81               [ 4]  282 	ret
                                    283 ;	se8r01-receive-car.c: 81: UCHAR read_spi_reg (UCHAR reg) {
                                    284 ;	-----------------------------------------
                                    285 ;	 function read_spi_reg
                                    286 ;	-----------------------------------------
      00006A                        287 _read_spi_reg:
      00006A 88               [ 1]  288 	push	a
                                    289 ;	se8r01-receive-car.c: 83: PC_ODR &= ~(1 << CSN);
      00006B AE 50 0A         [ 2]  290 	ldw	x, #0x500a
      00006E F6               [ 1]  291 	ld	a, (x)
      00006F A4 EF            [ 1]  292 	and	a, #0xef
      000071 F7               [ 1]  293 	ld	(x), a
                                    294 ;	se8r01-receive-car.c: 84: ret = write_spi (reg);
      000072 7B 04            [ 1]  295 	ld	a, (0x04, sp)
      000074 88               [ 1]  296 	push	a
      000075 CDr00r08         [ 4]  297 	call	_write_spi
      000078 5B 01            [ 2]  298 	addw	sp, #1
      00007A 6B 01            [ 1]  299 	ld	(0x01, sp), a
                                    300 ;	se8r01-receive-car.c: 85: if (reg != NOP && reg != FLUSH_RX && reg != FLUSH_TX)
      00007C 7B 04            [ 1]  301 	ld	a, (0x04, sp)
      00007E A1 FF            [ 1]  302 	cp	a, #0xff
      000080 27 17            [ 1]  303 	jreq	00102$
      000082 7B 04            [ 1]  304 	ld	a, (0x04, sp)
      000084 A1 E2            [ 1]  305 	cp	a, #0xe2
      000086 27 11            [ 1]  306 	jreq	00102$
      000088 7B 04            [ 1]  307 	ld	a, (0x04, sp)
      00008A A1 E1            [ 1]  308 	cp	a, #0xe1
      00008C 27 0B            [ 1]  309 	jreq	00102$
                                    310 ;	se8r01-receive-car.c: 86: ret = write_spi (NOP);
      00008E 4B FF            [ 1]  311 	push	#0xff
      000090 CDr00r08         [ 4]  312 	call	_write_spi
      000093 5B 01            [ 2]  313 	addw	sp, #1
      000095 6B 01            [ 1]  314 	ld	(0x01, sp), a
      000097 20 03            [ 2]  315 	jra	00103$
      000099                        316 00102$:
                                    317 ;	se8r01-receive-car.c: 88: delayTenMicro ();
      000099 CDr00r00         [ 4]  318 	call	_delayTenMicro
      00009C                        319 00103$:
                                    320 ;	se8r01-receive-car.c: 89: PC_ODR |= (1 << CSN);
      00009C AE 50 0A         [ 2]  321 	ldw	x, #0x500a
      00009F F6               [ 1]  322 	ld	a, (x)
      0000A0 AA 10            [ 1]  323 	or	a, #0x10
      0000A2 F7               [ 1]  324 	ld	(x), a
                                    325 ;	se8r01-receive-car.c: 90: return (ret);
      0000A3 7B 01            [ 1]  326 	ld	a, (0x01, sp)
      0000A5 5B 01            [ 2]  327 	addw	sp, #1
      0000A7 81               [ 4]  328 	ret
                                    329 ;	se8r01-receive-car.c: 92: UCHAR write_spi_buf (UCHAR reg, UCHAR *array, UCHAR len) {
                                    330 ;	-----------------------------------------
                                    331 ;	 function write_spi_buf
                                    332 ;	-----------------------------------------
      0000A8                        333 _write_spi_buf:
      0000A8 52 02            [ 2]  334 	sub	sp, #2
                                    335 ;	se8r01-receive-car.c: 94: PC_ODR &= ~(1 << CSN);
      0000AA AE 50 0A         [ 2]  336 	ldw	x, #0x500a
      0000AD F6               [ 1]  337 	ld	a, (x)
      0000AE A4 EF            [ 1]  338 	and	a, #0xef
      0000B0 F7               [ 1]  339 	ld	(x), a
                                    340 ;	se8r01-receive-car.c: 95: ret = write_spi (reg);
      0000B1 7B 05            [ 1]  341 	ld	a, (0x05, sp)
      0000B3 88               [ 1]  342 	push	a
      0000B4 CDr00r08         [ 4]  343 	call	_write_spi
      0000B7 5B 01            [ 2]  344 	addw	sp, #1
      0000B9 6B 02            [ 1]  345 	ld	(0x02, sp), a
                                    346 ;	se8r01-receive-car.c: 96: for (n = 0; n < len; ++n)
      0000BB 0F 01            [ 1]  347 	clr	(0x01, sp)
      0000BD                        348 00103$:
      0000BD 7B 01            [ 1]  349 	ld	a, (0x01, sp)
      0000BF 11 08            [ 1]  350 	cp	a, (0x08, sp)
      0000C1 24 11            [ 1]  351 	jrnc	00101$
                                    352 ;	se8r01-receive-car.c: 97: write_spi (array[n]);
      0000C3 5F               [ 1]  353 	clrw	x
      0000C4 7B 01            [ 1]  354 	ld	a, (0x01, sp)
      0000C6 97               [ 1]  355 	ld	xl, a
      0000C7 72 FB 06         [ 2]  356 	addw	x, (0x06, sp)
      0000CA F6               [ 1]  357 	ld	a, (x)
      0000CB 88               [ 1]  358 	push	a
      0000CC CDr00r08         [ 4]  359 	call	_write_spi
      0000CF 84               [ 1]  360 	pop	a
                                    361 ;	se8r01-receive-car.c: 96: for (n = 0; n < len; ++n)
      0000D0 0C 01            [ 1]  362 	inc	(0x01, sp)
      0000D2 20 E9            [ 2]  363 	jra	00103$
      0000D4                        364 00101$:
                                    365 ;	se8r01-receive-car.c: 98: PC_ODR |= (1 << CSN);
      0000D4 AE 50 0A         [ 2]  366 	ldw	x, #0x500a
      0000D7 F6               [ 1]  367 	ld	a, (x)
      0000D8 AA 10            [ 1]  368 	or	a, #0x10
      0000DA F7               [ 1]  369 	ld	(x), a
                                    370 ;	se8r01-receive-car.c: 99: return (ret);
      0000DB 7B 02            [ 1]  371 	ld	a, (0x02, sp)
      0000DD 5B 02            [ 2]  372 	addw	sp, #2
      0000DF 81               [ 4]  373 	ret
                                    374 ;	se8r01-receive-car.c: 101: UCHAR read_spi_buf (UCHAR reg, UCHAR *array, UCHAR len) {
                                    375 ;	-----------------------------------------
                                    376 ;	 function read_spi_buf
                                    377 ;	-----------------------------------------
      0000E0                        378 _read_spi_buf:
      0000E0 52 02            [ 2]  379 	sub	sp, #2
                                    380 ;	se8r01-receive-car.c: 103: PC_ODR &= ~(1 << CSN);
      0000E2 AE 50 0A         [ 2]  381 	ldw	x, #0x500a
      0000E5 F6               [ 1]  382 	ld	a, (x)
      0000E6 A4 EF            [ 1]  383 	and	a, #0xef
      0000E8 F7               [ 1]  384 	ld	(x), a
                                    385 ;	se8r01-receive-car.c: 104: ret = write_spi (reg);
      0000E9 7B 05            [ 1]  386 	ld	a, (0x05, sp)
      0000EB 88               [ 1]  387 	push	a
      0000EC CDr00r08         [ 4]  388 	call	_write_spi
      0000EF 5B 01            [ 2]  389 	addw	sp, #1
      0000F1 6B 01            [ 1]  390 	ld	(0x01, sp), a
                                    391 ;	se8r01-receive-car.c: 105: for (n = 0; n < len; ++n)
      0000F3 0F 02            [ 1]  392 	clr	(0x02, sp)
      0000F5                        393 00103$:
      0000F5 7B 02            [ 1]  394 	ld	a, (0x02, sp)
      0000F7 11 08            [ 1]  395 	cp	a, (0x08, sp)
      0000F9 24 15            [ 1]  396 	jrnc	00101$
                                    397 ;	se8r01-receive-car.c: 106: array[n] = write_spi (NOP);
      0000FB 5F               [ 1]  398 	clrw	x
      0000FC 7B 02            [ 1]  399 	ld	a, (0x02, sp)
      0000FE 97               [ 1]  400 	ld	xl, a
      0000FF 72 FB 06         [ 2]  401 	addw	x, (0x06, sp)
      000102 89               [ 2]  402 	pushw	x
      000103 4B FF            [ 1]  403 	push	#0xff
      000105 CDr00r08         [ 4]  404 	call	_write_spi
      000108 5B 01            [ 2]  405 	addw	sp, #1
      00010A 85               [ 2]  406 	popw	x
      00010B F7               [ 1]  407 	ld	(x), a
                                    408 ;	se8r01-receive-car.c: 105: for (n = 0; n < len; ++n)
      00010C 0C 02            [ 1]  409 	inc	(0x02, sp)
      00010E 20 E5            [ 2]  410 	jra	00103$
      000110                        411 00101$:
                                    412 ;	se8r01-receive-car.c: 107: PC_ODR |= (1 << CSN);
      000110 AE 50 0A         [ 2]  413 	ldw	x, #0x500a
      000113 F6               [ 1]  414 	ld	a, (x)
      000114 AA 10            [ 1]  415 	or	a, #0x10
      000116 F7               [ 1]  416 	ld	(x), a
                                    417 ;	se8r01-receive-car.c: 108: return (ret);
      000117 7B 01            [ 1]  418 	ld	a, (0x01, sp)
      000119 5B 02            [ 2]  419 	addw	sp, #2
      00011B 81               [ 4]  420 	ret
                                    421 ;	se8r01-receive-car.c: 110: void InitializeSPI () {
                                    422 ;	-----------------------------------------
                                    423 ;	 function InitializeSPI
                                    424 ;	-----------------------------------------
      00011C                        425 _InitializeSPI:
                                    426 ;	se8r01-receive-car.c: 111: SPI_CR1 = MSBFIRST | SPI_ENABLE | BR_DIV256 | MASTER | CPOL0 | CPHA0;
      00011C AE 52 00         [ 2]  427 	ldw	x, #0x5200
      00011F A6 7C            [ 1]  428 	ld	a, #0x7c
      000121 F7               [ 1]  429 	ld	(x), a
                                    430 ;	se8r01-receive-car.c: 112: SPI_CR2 = BDM_2LINE | CRCEN_OFF | CRCNEXT_TXBUF | FULL_DUPLEX | SSM_DISABLE;
      000122 AE 52 01         [ 2]  431 	ldw	x, #0x5201
      000125 7F               [ 1]  432 	clr	(x)
                                    433 ;	se8r01-receive-car.c: 113: SPI_ICR = TXIE_MASKED | RXIE_MASKED | ERRIE_MASKED | WKIE_MASKED;
      000126 AE 52 02         [ 2]  434 	ldw	x, #0x5202
      000129 7F               [ 1]  435 	clr	(x)
                                    436 ;	se8r01-receive-car.c: 114: PC_DDR = (1 << PC3) | (1 << PC4); // output mode
      00012A AE 50 0C         [ 2]  437 	ldw	x, #0x500c
      00012D A6 18            [ 1]  438 	ld	a, #0x18
      00012F F7               [ 1]  439 	ld	(x), a
                                    440 ;	se8r01-receive-car.c: 115: PC_CR1 = (1 << PC3) | (1 << PC4); // push-pull
      000130 AE 50 0D         [ 2]  441 	ldw	x, #0x500d
      000133 A6 18            [ 1]  442 	ld	a, #0x18
      000135 F7               [ 1]  443 	ld	(x), a
                                    444 ;	se8r01-receive-car.c: 116: PC_CR2 = (1 << PC3) | (1 << PC4); // up to 10MHz speed
      000136 AE 50 0E         [ 2]  445 	ldw	x, #0x500e
      000139 A6 18            [ 1]  446 	ld	a, #0x18
      00013B F7               [ 1]  447 	ld	(x), a
                                    448 ;	se8r01-receive-car.c: 118: PC_ODR &= ~(1 << CE);
      00013C AE 50 0A         [ 2]  449 	ldw	x, #0x500a
      00013F F6               [ 1]  450 	ld	a, (x)
      000140 A4 F7            [ 1]  451 	and	a, #0xf7
      000142 F7               [ 1]  452 	ld	(x), a
      000143 81               [ 4]  453 	ret
                                    454 ;	se8r01-receive-car.c: 120: void InitializeSystemClock() {
                                    455 ;	-----------------------------------------
                                    456 ;	 function InitializeSystemClock
                                    457 ;	-----------------------------------------
      000144                        458 _InitializeSystemClock:
                                    459 ;	se8r01-receive-car.c: 121: CLK_ICKR = 0;                       //  Reset the Internal Clock Register.
      000144 AE 50 C0         [ 2]  460 	ldw	x, #0x50c0
      000147 7F               [ 1]  461 	clr	(x)
                                    462 ;	se8r01-receive-car.c: 122: CLK_ICKR = CLK_HSIEN;               //  Enable the HSI.
      000148 AE 50 C0         [ 2]  463 	ldw	x, #0x50c0
      00014B A6 01            [ 1]  464 	ld	a, #0x01
      00014D F7               [ 1]  465 	ld	(x), a
                                    466 ;	se8r01-receive-car.c: 123: CLK_ECKR = 0;                       //  Disable the external clock.
      00014E AE 50 C1         [ 2]  467 	ldw	x, #0x50c1
      000151 7F               [ 1]  468 	clr	(x)
                                    469 ;	se8r01-receive-car.c: 124: while ((CLK_ICKR & CLK_HSIRDY) == 0);       //  Wait for the HSI to be ready for use.
      000152                        470 00101$:
      000152 AE 50 C0         [ 2]  471 	ldw	x, #0x50c0
      000155 F6               [ 1]  472 	ld	a, (x)
      000156 A5 02            [ 1]  473 	bcp	a, #0x02
      000158 27 F8            [ 1]  474 	jreq	00101$
                                    475 ;	se8r01-receive-car.c: 125: CLK_CKDIVR = 0;                     //  Ensure the clocks are running at full speed.
      00015A AE 50 C6         [ 2]  476 	ldw	x, #0x50c6
      00015D 7F               [ 1]  477 	clr	(x)
                                    478 ;	se8r01-receive-car.c: 126: CLK_PCKENR1 = 0xff;                 //  Enable all peripheral clocks.
      00015E AE 50 C7         [ 2]  479 	ldw	x, #0x50c7
      000161 A6 FF            [ 1]  480 	ld	a, #0xff
      000163 F7               [ 1]  481 	ld	(x), a
                                    482 ;	se8r01-receive-car.c: 127: CLK_PCKENR2 = 0xff;                 //  Ditto.
      000164 AE 50 CA         [ 2]  483 	ldw	x, #0x50ca
      000167 A6 FF            [ 1]  484 	ld	a, #0xff
      000169 F7               [ 1]  485 	ld	(x), a
                                    486 ;	se8r01-receive-car.c: 128: CLK_CCOR = 0;                       //  Turn off CCO.
      00016A AE 50 C9         [ 2]  487 	ldw	x, #0x50c9
      00016D 7F               [ 1]  488 	clr	(x)
                                    489 ;	se8r01-receive-car.c: 129: CLK_HSITRIMR = 0;                   //  Turn off any HSIU trimming.
      00016E AE 50 CC         [ 2]  490 	ldw	x, #0x50cc
      000171 7F               [ 1]  491 	clr	(x)
                                    492 ;	se8r01-receive-car.c: 130: CLK_SWIMCCR = 0;                    //  Set SWIM to run at clock / 2.
      000172 AE 50 CD         [ 2]  493 	ldw	x, #0x50cd
      000175 7F               [ 1]  494 	clr	(x)
                                    495 ;	se8r01-receive-car.c: 131: CLK_SWR = 0xe1;                     //  Use HSI as the clock source.
      000176 AE 50 C4         [ 2]  496 	ldw	x, #0x50c4
      000179 A6 E1            [ 1]  497 	ld	a, #0xe1
      00017B F7               [ 1]  498 	ld	(x), a
                                    499 ;	se8r01-receive-car.c: 132: CLK_SWCR = 0;                       //  Reset the clock switch control register.
      00017C AE 50 C5         [ 2]  500 	ldw	x, #0x50c5
      00017F 7F               [ 1]  501 	clr	(x)
                                    502 ;	se8r01-receive-car.c: 133: CLK_SWCR = CLK_SWEN;                //  Enable switching.
      000180 AE 50 C5         [ 2]  503 	ldw	x, #0x50c5
      000183 A6 02            [ 1]  504 	ld	a, #0x02
      000185 F7               [ 1]  505 	ld	(x), a
                                    506 ;	se8r01-receive-car.c: 134: while ((CLK_SWCR & CLK_SWBSY) != 0);        //  Pause while the clock switch is busy.
      000186                        507 00104$:
      000186 AE 50 C5         [ 2]  508 	ldw	x, #0x50c5
      000189 F6               [ 1]  509 	ld	a, (x)
      00018A 44               [ 1]  510 	srl	a
      00018B 25 F9            [ 1]  511 	jrc	00104$
      00018D 81               [ 4]  512 	ret
                                    513 ;	se8r01-receive-car.c: 136: void delay (int time_ms) {
                                    514 ;	-----------------------------------------
                                    515 ;	 function delay
                                    516 ;	-----------------------------------------
      00018E                        517 _delay:
      00018E 52 0A            [ 2]  518 	sub	sp, #10
                                    519 ;	se8r01-receive-car.c: 138: for (x = 0; x < 1036*time_ms; ++x)
      000190 5F               [ 1]  520 	clrw	x
      000191 1F 03            [ 2]  521 	ldw	(0x03, sp), x
      000193 1F 01            [ 2]  522 	ldw	(0x01, sp), x
      000195 1E 0D            [ 2]  523 	ldw	x, (0x0d, sp)
      000197 89               [ 2]  524 	pushw	x
      000198 4B 0C            [ 1]  525 	push	#0x0c
      00019A 4B 04            [ 1]  526 	push	#0x04
      00019C CDr00r00         [ 4]  527 	call	__mulint
      00019F 5B 04            [ 2]  528 	addw	sp, #4
      0001A1 1F 09            [ 2]  529 	ldw	(0x09, sp), x
      0001A3                        530 00103$:
      0001A3 16 09            [ 2]  531 	ldw	y, (0x09, sp)
      0001A5 17 07            [ 2]  532 	ldw	(0x07, sp), y
      0001A7 7B 07            [ 1]  533 	ld	a, (0x07, sp)
      0001A9 49               [ 1]  534 	rlc	a
      0001AA 4F               [ 1]  535 	clr	a
      0001AB A2 00            [ 1]  536 	sbc	a, #0x00
      0001AD 6B 06            [ 1]  537 	ld	(0x06, sp), a
      0001AF 6B 05            [ 1]  538 	ld	(0x05, sp), a
      0001B1 1E 03            [ 2]  539 	ldw	x, (0x03, sp)
      0001B3 13 07            [ 2]  540 	cpw	x, (0x07, sp)
      0001B5 7B 02            [ 1]  541 	ld	a, (0x02, sp)
      0001B7 12 06            [ 1]  542 	sbc	a, (0x06, sp)
      0001B9 7B 01            [ 1]  543 	ld	a, (0x01, sp)
      0001BB 12 05            [ 1]  544 	sbc	a, (0x05, sp)
      0001BD 2E 17            [ 1]  545 	jrsge	00105$
                                    546 ;	se8r01-receive-car.c: 139: __asm__("nop");
      0001BF 9D               [ 1]  547 	nop
                                    548 ;	se8r01-receive-car.c: 138: for (x = 0; x < 1036*time_ms; ++x)
      0001C0 16 03            [ 2]  549 	ldw	y, (0x03, sp)
      0001C2 72 A9 00 01      [ 2]  550 	addw	y, #0x0001
      0001C6 7B 02            [ 1]  551 	ld	a, (0x02, sp)
      0001C8 A9 00            [ 1]  552 	adc	a, #0x00
      0001CA 97               [ 1]  553 	ld	xl, a
      0001CB 7B 01            [ 1]  554 	ld	a, (0x01, sp)
      0001CD A9 00            [ 1]  555 	adc	a, #0x00
      0001CF 95               [ 1]  556 	ld	xh, a
      0001D0 17 03            [ 2]  557 	ldw	(0x03, sp), y
      0001D2 1F 01            [ 2]  558 	ldw	(0x01, sp), x
      0001D4 20 CD            [ 2]  559 	jra	00103$
      0001D6                        560 00105$:
      0001D6 5B 0A            [ 2]  561 	addw	sp, #10
      0001D8 81               [ 4]  562 	ret
                                    563 ;	se8r01-receive-car.c: 144: void UARTPrintF (char *message) {
                                    564 ;	-----------------------------------------
                                    565 ;	 function UARTPrintF
                                    566 ;	-----------------------------------------
      0001D9                        567 _UARTPrintF:
                                    568 ;	se8r01-receive-car.c: 145: char *ch = message;
      0001D9 16 03            [ 2]  569 	ldw	y, (0x03, sp)
                                    570 ;	se8r01-receive-car.c: 146: while (*ch) {
      0001DB                        571 00104$:
      0001DB 90 F6            [ 1]  572 	ld	a, (y)
      0001DD 4D               [ 1]  573 	tnz	a
      0001DE 27 0F            [ 1]  574 	jreq	00107$
                                    575 ;	se8r01-receive-car.c: 147: UART1_DR = (unsigned char) *ch;     //  Put the next character into the data transmission register.
      0001E0 AE 52 31         [ 2]  576 	ldw	x, #0x5231
      0001E3 F7               [ 1]  577 	ld	(x), a
                                    578 ;	se8r01-receive-car.c: 148: while ((UART1_SR & SR_TXE) == 0);   //  Wait for transmission to complete.
      0001E4                        579 00101$:
      0001E4 AE 52 30         [ 2]  580 	ldw	x, #0x5230
      0001E7 F6               [ 1]  581 	ld	a, (x)
      0001E8 48               [ 1]  582 	sll	a
      0001E9 24 F9            [ 1]  583 	jrnc	00101$
                                    584 ;	se8r01-receive-car.c: 149: ch++;                               //  Grab the next character.
      0001EB 90 5C            [ 2]  585 	incw	y
      0001ED 20 EC            [ 2]  586 	jra	00104$
      0001EF                        587 00107$:
      0001EF 81               [ 4]  588 	ret
                                    589 ;	se8r01-receive-car.c: 152: void print_UCHAR_hex (unsigned char buffer) {
                                    590 ;	-----------------------------------------
                                    591 ;	 function print_UCHAR_hex
                                    592 ;	-----------------------------------------
      0001F0                        593 _print_UCHAR_hex:
      0001F0 52 0C            [ 2]  594 	sub	sp, #12
                                    595 ;	se8r01-receive-car.c: 155: a = (buffer >> 4);
      0001F2 7B 0F            [ 1]  596 	ld	a, (0x0f, sp)
      0001F4 4E               [ 1]  597 	swap	a
      0001F5 A4 0F            [ 1]  598 	and	a, #0x0f
      0001F7 5F               [ 1]  599 	clrw	x
      0001F8 97               [ 1]  600 	ld	xl, a
                                    601 ;	se8r01-receive-car.c: 156: if (a > 9)
      0001F9 A3 00 09         [ 2]  602 	cpw	x, #0x0009
      0001FC 2D 07            [ 1]  603 	jrsle	00102$
                                    604 ;	se8r01-receive-car.c: 157: a = a + 'a' - 10;
      0001FE 1C 00 57         [ 2]  605 	addw	x, #0x0057
      000201 1F 0B            [ 2]  606 	ldw	(0x0b, sp), x
      000203 20 05            [ 2]  607 	jra	00103$
      000205                        608 00102$:
                                    609 ;	se8r01-receive-car.c: 159: a += '0'; 
      000205 1C 00 30         [ 2]  610 	addw	x, #0x0030
      000208 1F 0B            [ 2]  611 	ldw	(0x0b, sp), x
      00020A                        612 00103$:
                                    613 ;	se8r01-receive-car.c: 160: b = buffer & 0x0f;
      00020A 7B 0F            [ 1]  614 	ld	a, (0x0f, sp)
      00020C A4 0F            [ 1]  615 	and	a, #0x0f
      00020E 5F               [ 1]  616 	clrw	x
      00020F 97               [ 1]  617 	ld	xl, a
                                    618 ;	se8r01-receive-car.c: 161: if (b > 9)
      000210 A3 00 09         [ 2]  619 	cpw	x, #0x0009
      000213 2D 07            [ 1]  620 	jrsle	00105$
                                    621 ;	se8r01-receive-car.c: 162: b = b + 'a' - 10;
      000215 1C 00 57         [ 2]  622 	addw	x, #0x0057
      000218 1F 09            [ 2]  623 	ldw	(0x09, sp), x
      00021A 20 05            [ 2]  624 	jra	00106$
      00021C                        625 00105$:
                                    626 ;	se8r01-receive-car.c: 164: b += '0'; 
      00021C 1C 00 30         [ 2]  627 	addw	x, #0x0030
      00021F 1F 09            [ 2]  628 	ldw	(0x09, sp), x
      000221                        629 00106$:
                                    630 ;	se8r01-receive-car.c: 165: message[0] = a;
      000221 90 96            [ 1]  631 	ldw	y, sp
      000223 90 5C            [ 2]  632 	incw	y
      000225 7B 0C            [ 1]  633 	ld	a, (0x0c, sp)
      000227 90 F7            [ 1]  634 	ld	(y), a
                                    635 ;	se8r01-receive-car.c: 166: message[1] = b;
      000229 93               [ 1]  636 	ldw	x, y
      00022A 5C               [ 2]  637 	incw	x
      00022B 7B 0A            [ 1]  638 	ld	a, (0x0a, sp)
      00022D F7               [ 1]  639 	ld	(x), a
                                    640 ;	se8r01-receive-car.c: 167: message[2] = 0;
      00022E 93               [ 1]  641 	ldw	x, y
      00022F 5C               [ 2]  642 	incw	x
      000230 5C               [ 2]  643 	incw	x
      000231 7F               [ 1]  644 	clr	(x)
                                    645 ;	se8r01-receive-car.c: 168: UARTPrintF (message);
      000232 90 89            [ 2]  646 	pushw	y
      000234 CDr01rD9         [ 4]  647 	call	_UARTPrintF
      000237 5B 02            [ 2]  648 	addw	sp, #2
      000239 5B 0C            [ 2]  649 	addw	sp, #12
      00023B 81               [ 4]  650 	ret
                                    651 ;	se8r01-receive-car.c: 171: void InitializeUART() {
                                    652 ;	-----------------------------------------
                                    653 ;	 function InitializeUART
                                    654 ;	-----------------------------------------
      00023C                        655 _InitializeUART:
                                    656 ;	se8r01-receive-car.c: 181: UART1_CR1 = 0;
      00023C AE 52 34         [ 2]  657 	ldw	x, #0x5234
      00023F 7F               [ 1]  658 	clr	(x)
                                    659 ;	se8r01-receive-car.c: 182: UART1_CR2 = 0;
      000240 AE 52 35         [ 2]  660 	ldw	x, #0x5235
      000243 7F               [ 1]  661 	clr	(x)
                                    662 ;	se8r01-receive-car.c: 183: UART1_CR4 = 0;
      000244 AE 52 37         [ 2]  663 	ldw	x, #0x5237
      000247 7F               [ 1]  664 	clr	(x)
                                    665 ;	se8r01-receive-car.c: 184: UART1_CR3 = 0;
      000248 AE 52 36         [ 2]  666 	ldw	x, #0x5236
      00024B 7F               [ 1]  667 	clr	(x)
                                    668 ;	se8r01-receive-car.c: 185: UART1_CR5 = 0;
      00024C AE 52 38         [ 2]  669 	ldw	x, #0x5238
      00024F 7F               [ 1]  670 	clr	(x)
                                    671 ;	se8r01-receive-car.c: 186: UART1_GTR = 0;
      000250 AE 52 39         [ 2]  672 	ldw	x, #0x5239
      000253 7F               [ 1]  673 	clr	(x)
                                    674 ;	se8r01-receive-car.c: 187: UART1_PSCR = 0;
      000254 AE 52 3A         [ 2]  675 	ldw	x, #0x523a
      000257 7F               [ 1]  676 	clr	(x)
                                    677 ;	se8r01-receive-car.c: 191: UNSET (UART1_CR1, CR1_M);        //  8 Data bits.
      000258 AE 52 34         [ 2]  678 	ldw	x, #0x5234
      00025B F6               [ 1]  679 	ld	a, (x)
      00025C A4 EF            [ 1]  680 	and	a, #0xef
      00025E F7               [ 1]  681 	ld	(x), a
                                    682 ;	se8r01-receive-car.c: 192: UNSET (UART1_CR1, CR1_PCEN);     //  Disable parity.
      00025F AE 52 34         [ 2]  683 	ldw	x, #0x5234
      000262 F6               [ 1]  684 	ld	a, (x)
      000263 A4 FB            [ 1]  685 	and	a, #0xfb
      000265 F7               [ 1]  686 	ld	(x), a
                                    687 ;	se8r01-receive-car.c: 193: UNSET (UART1_CR3, CR3_STOPH);    //  1 stop bit.
      000266 AE 52 36         [ 2]  688 	ldw	x, #0x5236
      000269 F6               [ 1]  689 	ld	a, (x)
      00026A A4 DF            [ 1]  690 	and	a, #0xdf
      00026C F7               [ 1]  691 	ld	(x), a
                                    692 ;	se8r01-receive-car.c: 194: UNSET (UART1_CR3, CR3_STOPL);    //  1 stop bit.
      00026D AE 52 36         [ 2]  693 	ldw	x, #0x5236
      000270 F6               [ 1]  694 	ld	a, (x)
      000271 A4 EF            [ 1]  695 	and	a, #0xef
      000273 F7               [ 1]  696 	ld	(x), a
                                    697 ;	se8r01-receive-car.c: 195: UART1_BRR2 = 0x0a;      //  Set the baud rate registers to 115200 baud
      000274 AE 52 33         [ 2]  698 	ldw	x, #0x5233
      000277 A6 0A            [ 1]  699 	ld	a, #0x0a
      000279 F7               [ 1]  700 	ld	(x), a
                                    701 ;	se8r01-receive-car.c: 196: UART1_BRR1 = 0x08;      //  based upon a 16 MHz system clock.
      00027A AE 52 32         [ 2]  702 	ldw	x, #0x5232
      00027D A6 08            [ 1]  703 	ld	a, #0x08
      00027F F7               [ 1]  704 	ld	(x), a
                                    705 ;	se8r01-receive-car.c: 200: UNSET (UART1_CR2, CR2_TEN);      //  Disable transmit.
      000280 AE 52 35         [ 2]  706 	ldw	x, #0x5235
      000283 F6               [ 1]  707 	ld	a, (x)
      000284 A4 F7            [ 1]  708 	and	a, #0xf7
      000286 F7               [ 1]  709 	ld	(x), a
                                    710 ;	se8r01-receive-car.c: 201: UNSET (UART1_CR2, CR2_REN);      //  Disable receive.
      000287 AE 52 35         [ 2]  711 	ldw	x, #0x5235
      00028A F6               [ 1]  712 	ld	a, (x)
      00028B A4 FB            [ 1]  713 	and	a, #0xfb
      00028D F7               [ 1]  714 	ld	(x), a
                                    715 ;	se8r01-receive-car.c: 205: SET (UART1_CR3, CR3_CPOL);
      00028E AE 52 36         [ 2]  716 	ldw	x, #0x5236
      000291 F6               [ 1]  717 	ld	a, (x)
      000292 AA 04            [ 1]  718 	or	a, #0x04
      000294 F7               [ 1]  719 	ld	(x), a
                                    720 ;	se8r01-receive-car.c: 206: SET (UART1_CR3, CR3_CPHA);
      000295 AE 52 36         [ 2]  721 	ldw	x, #0x5236
      000298 F6               [ 1]  722 	ld	a, (x)
      000299 AA 02            [ 1]  723 	or	a, #0x02
      00029B F7               [ 1]  724 	ld	(x), a
                                    725 ;	se8r01-receive-car.c: 207: SET (UART1_CR3, CR3_LBCL);
      00029C 72 10 52 36      [ 1]  726 	bset	0x5236, #0
                                    727 ;	se8r01-receive-car.c: 211: SET (UART1_CR2, CR2_TEN);
      0002A0 AE 52 35         [ 2]  728 	ldw	x, #0x5235
      0002A3 F6               [ 1]  729 	ld	a, (x)
      0002A4 AA 08            [ 1]  730 	or	a, #0x08
      0002A6 F7               [ 1]  731 	ld	(x), a
                                    732 ;	se8r01-receive-car.c: 212: SET (UART1_CR2, CR2_REN);
      0002A7 AE 52 35         [ 2]  733 	ldw	x, #0x5235
      0002AA F6               [ 1]  734 	ld	a, (x)
      0002AB AA 04            [ 1]  735 	or	a, #0x04
      0002AD F7               [ 1]  736 	ld	(x), a
                                    737 ;	se8r01-receive-car.c: 213: UART1_CR3 = CR3_CLKEN;
      0002AE AE 52 36         [ 2]  738 	ldw	x, #0x5236
      0002B1 A6 08            [ 1]  739 	ld	a, #0x08
      0002B3 F7               [ 1]  740 	ld	(x), a
      0002B4 81               [ 4]  741 	ret
                                    742 ;	se8r01-receive-car.c: 286: void init_io(void)
                                    743 ;	-----------------------------------------
                                    744 ;	 function init_io
                                    745 ;	-----------------------------------------
      0002B5                        746 _init_io:
                                    747 ;	se8r01-receive-car.c: 294: PC_ODR &= ~(1 << CE);
      0002B5 AE 50 0A         [ 2]  748 	ldw	x, #0x500a
      0002B8 F6               [ 1]  749 	ld	a, (x)
      0002B9 A4 F7            [ 1]  750 	and	a, #0xf7
      0002BB F7               [ 1]  751 	ld	(x), a
                                    752 ;	se8r01-receive-car.c: 296: PC_ODR |= (1 << CSN);
      0002BC AE 50 0A         [ 2]  753 	ldw	x, #0x500a
      0002BF F6               [ 1]  754 	ld	a, (x)
      0002C0 AA 10            [ 1]  755 	or	a, #0x10
      0002C2 F7               [ 1]  756 	ld	(x), a
      0002C3 81               [ 4]  757 	ret
                                    758 ;	se8r01-receive-car.c: 302: void rf_switch_bank(unsigned char bankindex)
                                    759 ;	-----------------------------------------
                                    760 ;	 function rf_switch_bank
                                    761 ;	-----------------------------------------
      0002C4                        762 _rf_switch_bank:
      0002C4 88               [ 1]  763 	push	a
                                    764 ;	se8r01-receive-car.c: 305: temp1 = bankindex;
      0002C5 7B 04            [ 1]  765 	ld	a, (0x04, sp)
      0002C7 6B 01            [ 1]  766 	ld	(0x01, sp), a
                                    767 ;	se8r01-receive-car.c: 307: temp0 = write_spi(iRF_BANK0_STATUS);
      0002C9 4B 07            [ 1]  768 	push	#0x07
      0002CB CDr00r08         [ 4]  769 	call	_write_spi
      0002CE 5B 01            [ 2]  770 	addw	sp, #1
                                    771 ;	se8r01-receive-car.c: 309: if((temp0&0x80)!=temp1)
      0002D0 A4 80            [ 1]  772 	and	a, #0x80
      0002D2 11 01            [ 1]  773 	cp	a, (0x01, sp)
      0002D4 27 09            [ 1]  774 	jreq	00103$
                                    775 ;	se8r01-receive-car.c: 311: write_spi_reg(iRF_CMD_ACTIVATE,0x53);
      0002D6 4B 53            [ 1]  776 	push	#0x53
      0002D8 4B 50            [ 1]  777 	push	#0x50
      0002DA CDr00r2E         [ 4]  778 	call	_write_spi_reg
      0002DD 5B 02            [ 2]  779 	addw	sp, #2
      0002DF                        780 00103$:
      0002DF 84               [ 1]  781 	pop	a
      0002E0 81               [ 4]  782 	ret
                                    783 ;	se8r01-receive-car.c: 318: void SE8R01_Calibration()
                                    784 ;	-----------------------------------------
                                    785 ;	 function SE8R01_Calibration
                                    786 ;	-----------------------------------------
      0002E1                        787 _SE8R01_Calibration:
      0002E1 52 0D            [ 2]  788 	sub	sp, #13
                                    789 ;	se8r01-receive-car.c: 321: rf_switch_bank(iBANK0);
      0002E3 4B 00            [ 1]  790 	push	#0x00
      0002E5 CDr02rC4         [ 4]  791 	call	_rf_switch_bank
      0002E8 84               [ 1]  792 	pop	a
                                    793 ;	se8r01-receive-car.c: 322: temp[0]=0x03;
      0002E9 96               [ 1]  794 	ldw	x, sp
      0002EA 5C               [ 2]  795 	incw	x
      0002EB 1F 06            [ 2]  796 	ldw	(0x06, sp), x
      0002ED 1E 06            [ 2]  797 	ldw	x, (0x06, sp)
      0002EF A6 03            [ 1]  798 	ld	a, #0x03
      0002F1 F7               [ 1]  799 	ld	(x), a
                                    800 ;	se8r01-receive-car.c: 323: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_CONFIG,temp, 1);
      0002F2 1E 06            [ 2]  801 	ldw	x, (0x06, sp)
      0002F4 4B 01            [ 1]  802 	push	#0x01
      0002F6 89               [ 2]  803 	pushw	x
      0002F7 4B 20            [ 1]  804 	push	#0x20
      0002F9 CDr00rA8         [ 4]  805 	call	_write_spi_buf
      0002FC 5B 04            [ 2]  806 	addw	sp, #4
                                    807 ;	se8r01-receive-car.c: 325: temp[0]=0x32;
      0002FE 1E 06            [ 2]  808 	ldw	x, (0x06, sp)
      000300 A6 32            [ 1]  809 	ld	a, #0x32
      000302 F7               [ 1]  810 	ld	(x), a
                                    811 ;	se8r01-receive-car.c: 327: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_RF_CH, temp,1);
      000303 1E 06            [ 2]  812 	ldw	x, (0x06, sp)
      000305 4B 01            [ 1]  813 	push	#0x01
      000307 89               [ 2]  814 	pushw	x
      000308 4B 25            [ 1]  815 	push	#0x25
      00030A CDr00rA8         [ 4]  816 	call	_write_spi_buf
      00030D 5B 04            [ 2]  817 	addw	sp, #4
                                    818 ;	se8r01-receive-car.c: 331: if (SE8R01_DR_2M==1)
      00030F CEu00u00         [ 2]  819 	ldw	x, _SE8R01_DR_2M+0
      000312 A3 00 01         [ 2]  820 	cpw	x, #0x0001
      000315 26 07            [ 1]  821 	jrne	00105$
                                    822 ;	se8r01-receive-car.c: 332: {temp[0]=0x48;}
      000317 1E 06            [ 2]  823 	ldw	x, (0x06, sp)
      000319 A6 48            [ 1]  824 	ld	a, #0x48
      00031B F7               [ 1]  825 	ld	(x), a
      00031C 20 14            [ 2]  826 	jra	00106$
      00031E                        827 00105$:
                                    828 ;	se8r01-receive-car.c: 333: else if (SE8R01_DR_1M==1)
      00031E CEu00u02         [ 2]  829 	ldw	x, _SE8R01_DR_1M+0
      000321 A3 00 01         [ 2]  830 	cpw	x, #0x0001
      000324 26 07            [ 1]  831 	jrne	00102$
                                    832 ;	se8r01-receive-car.c: 334: {temp[0]=0x40;}
      000326 1E 06            [ 2]  833 	ldw	x, (0x06, sp)
      000328 A6 40            [ 1]  834 	ld	a, #0x40
      00032A F7               [ 1]  835 	ld	(x), a
      00032B 20 05            [ 2]  836 	jra	00106$
      00032D                        837 00102$:
                                    838 ;	se8r01-receive-car.c: 336: {temp[0]=0x68;}   
      00032D 1E 06            [ 2]  839 	ldw	x, (0x06, sp)
      00032F A6 68            [ 1]  840 	ld	a, #0x68
      000331 F7               [ 1]  841 	ld	(x), a
      000332                        842 00106$:
                                    843 ;	se8r01-receive-car.c: 338: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_RF_SETUP,temp,1);
      000332 1E 06            [ 2]  844 	ldw	x, (0x06, sp)
      000334 4B 01            [ 1]  845 	push	#0x01
      000336 89               [ 2]  846 	pushw	x
      000337 4B 26            [ 1]  847 	push	#0x26
      000339 CDr00rA8         [ 4]  848 	call	_write_spi_buf
      00033C 5B 04            [ 2]  849 	addw	sp, #4
                                    850 ;	se8r01-receive-car.c: 339: temp[0]=0x77;
      00033E 1E 06            [ 2]  851 	ldw	x, (0x06, sp)
      000340 A6 77            [ 1]  852 	ld	a, #0x77
      000342 F7               [ 1]  853 	ld	(x), a
                                    854 ;	se8r01-receive-car.c: 340: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_PRE_GURD, temp,1);
      000343 1E 06            [ 2]  855 	ldw	x, (0x06, sp)
      000345 4B 01            [ 1]  856 	push	#0x01
      000347 89               [ 2]  857 	pushw	x
      000348 4B 3F            [ 1]  858 	push	#0x3f
      00034A CDr00rA8         [ 4]  859 	call	_write_spi_buf
      00034D 5B 04            [ 2]  860 	addw	sp, #4
                                    861 ;	se8r01-receive-car.c: 342: rf_switch_bank(iBANK1);
      00034F 4B 80            [ 1]  862 	push	#0x80
      000351 CDr02rC4         [ 4]  863 	call	_rf_switch_bank
      000354 84               [ 1]  864 	pop	a
                                    865 ;	se8r01-receive-car.c: 343: temp[0]=0x40;
      000355 1E 06            [ 2]  866 	ldw	x, (0x06, sp)
      000357 A6 40            [ 1]  867 	ld	a, #0x40
      000359 F7               [ 1]  868 	ld	(x), a
                                    869 ;	se8r01-receive-car.c: 344: temp[1]=0x00;
      00035A 1E 06            [ 2]  870 	ldw	x, (0x06, sp)
      00035C 5C               [ 2]  871 	incw	x
      00035D 1F 0C            [ 2]  872 	ldw	(0x0c, sp), x
      00035F 1E 0C            [ 2]  873 	ldw	x, (0x0c, sp)
      000361 7F               [ 1]  874 	clr	(x)
                                    875 ;	se8r01-receive-car.c: 345: temp[2]=0x10;
      000362 1E 06            [ 2]  876 	ldw	x, (0x06, sp)
      000364 5C               [ 2]  877 	incw	x
      000365 5C               [ 2]  878 	incw	x
      000366 1F 0A            [ 2]  879 	ldw	(0x0a, sp), x
      000368 1E 0A            [ 2]  880 	ldw	x, (0x0a, sp)
      00036A A6 10            [ 1]  881 	ld	a, #0x10
      00036C F7               [ 1]  882 	ld	(x), a
                                    883 ;	se8r01-receive-car.c: 347: {temp[3]=0xE6;}
      00036D 1E 06            [ 2]  884 	ldw	x, (0x06, sp)
      00036F 1C 00 03         [ 2]  885 	addw	x, #0x0003
      000372 1F 08            [ 2]  886 	ldw	(0x08, sp), x
                                    887 ;	se8r01-receive-car.c: 346: if (SE8R01_DR_2M==1)
      000374 CEu00u00         [ 2]  888 	ldw	x, _SE8R01_DR_2M+0
      000377 A3 00 01         [ 2]  889 	cpw	x, #0x0001
      00037A 26 07            [ 1]  890 	jrne	00108$
                                    891 ;	se8r01-receive-car.c: 347: {temp[3]=0xE6;}
      00037C 1E 08            [ 2]  892 	ldw	x, (0x08, sp)
      00037E A6 E6            [ 1]  893 	ld	a, #0xe6
      000380 F7               [ 1]  894 	ld	(x), a
      000381 20 05            [ 2]  895 	jra	00109$
      000383                        896 00108$:
                                    897 ;	se8r01-receive-car.c: 349: {temp[3]=0xE4;}
      000383 1E 08            [ 2]  898 	ldw	x, (0x08, sp)
      000385 A6 E4            [ 1]  899 	ld	a, #0xe4
      000387 F7               [ 1]  900 	ld	(x), a
      000388                        901 00109$:
                                    902 ;	se8r01-receive-car.c: 351: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_PLL_CTL0, temp, 4);
      000388 1E 06            [ 2]  903 	ldw	x, (0x06, sp)
      00038A 4B 04            [ 1]  904 	push	#0x04
      00038C 89               [ 2]  905 	pushw	x
      00038D 4B 21            [ 1]  906 	push	#0x21
      00038F CDr00rA8         [ 4]  907 	call	_write_spi_buf
      000392 5B 04            [ 2]  908 	addw	sp, #4
                                    909 ;	se8r01-receive-car.c: 353: temp[0]=0x20;
      000394 1E 06            [ 2]  910 	ldw	x, (0x06, sp)
      000396 A6 20            [ 1]  911 	ld	a, #0x20
      000398 F7               [ 1]  912 	ld	(x), a
                                    913 ;	se8r01-receive-car.c: 354: temp[1]=0x08;
      000399 1E 0C            [ 2]  914 	ldw	x, (0x0c, sp)
      00039B A6 08            [ 1]  915 	ld	a, #0x08
      00039D F7               [ 1]  916 	ld	(x), a
                                    917 ;	se8r01-receive-car.c: 355: temp[2]=0x50;
      00039E 1E 0A            [ 2]  918 	ldw	x, (0x0a, sp)
      0003A0 A6 50            [ 1]  919 	ld	a, #0x50
      0003A2 F7               [ 1]  920 	ld	(x), a
                                    921 ;	se8r01-receive-car.c: 356: temp[3]=0x40;
      0003A3 1E 08            [ 2]  922 	ldw	x, (0x08, sp)
      0003A5 A6 40            [ 1]  923 	ld	a, #0x40
      0003A7 F7               [ 1]  924 	ld	(x), a
                                    925 ;	se8r01-receive-car.c: 357: temp[4]=0x50;
      0003A8 1E 06            [ 2]  926 	ldw	x, (0x06, sp)
      0003AA A6 50            [ 1]  927 	ld	a, #0x50
      0003AC E7 04            [ 1]  928 	ld	(0x0004, x), a
                                    929 ;	se8r01-receive-car.c: 358: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_CAL_CTL, temp, 5);
      0003AE 1E 06            [ 2]  930 	ldw	x, (0x06, sp)
      0003B0 4B 05            [ 1]  931 	push	#0x05
      0003B2 89               [ 2]  932 	pushw	x
      0003B3 4B 23            [ 1]  933 	push	#0x23
      0003B5 CDr00rA8         [ 4]  934 	call	_write_spi_buf
      0003B8 5B 04            [ 2]  935 	addw	sp, #4
                                    936 ;	se8r01-receive-car.c: 360: temp[0]=0x00;
      0003BA 1E 06            [ 2]  937 	ldw	x, (0x06, sp)
      0003BC 7F               [ 1]  938 	clr	(x)
                                    939 ;	se8r01-receive-car.c: 361: temp[1]=0x00;
      0003BD 1E 0C            [ 2]  940 	ldw	x, (0x0c, sp)
      0003BF 7F               [ 1]  941 	clr	(x)
                                    942 ;	se8r01-receive-car.c: 362: if (SE8R01_DR_2M==1)
      0003C0 CEu00u00         [ 2]  943 	ldw	x, _SE8R01_DR_2M+0
      0003C3 A3 00 01         [ 2]  944 	cpw	x, #0x0001
      0003C6 26 07            [ 1]  945 	jrne	00111$
                                    946 ;	se8r01-receive-car.c: 363: { temp[2]=0x1E;}
      0003C8 1E 0A            [ 2]  947 	ldw	x, (0x0a, sp)
      0003CA A6 1E            [ 1]  948 	ld	a, #0x1e
      0003CC F7               [ 1]  949 	ld	(x), a
      0003CD 20 05            [ 2]  950 	jra	00112$
      0003CF                        951 00111$:
                                    952 ;	se8r01-receive-car.c: 365: { temp[2]=0x1F;}
      0003CF 1E 0A            [ 2]  953 	ldw	x, (0x0a, sp)
      0003D1 A6 1F            [ 1]  954 	ld	a, #0x1f
      0003D3 F7               [ 1]  955 	ld	(x), a
      0003D4                        956 00112$:
                                    957 ;	se8r01-receive-car.c: 367: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_IF_FREQ, temp, 3);
      0003D4 1E 06            [ 2]  958 	ldw	x, (0x06, sp)
      0003D6 4B 03            [ 1]  959 	push	#0x03
      0003D8 89               [ 2]  960 	pushw	x
      0003D9 4B 2A            [ 1]  961 	push	#0x2a
      0003DB CDr00rA8         [ 4]  962 	call	_write_spi_buf
      0003DE 5B 04            [ 2]  963 	addw	sp, #4
                                    964 ;	se8r01-receive-car.c: 369: if (SE8R01_DR_2M==1)
      0003E0 CEu00u00         [ 2]  965 	ldw	x, _SE8R01_DR_2M+0
      0003E3 A3 00 01         [ 2]  966 	cpw	x, #0x0001
      0003E6 26 07            [ 1]  967 	jrne	00114$
                                    968 ;	se8r01-receive-car.c: 370: { temp[0]=0x29;}
      0003E8 1E 06            [ 2]  969 	ldw	x, (0x06, sp)
      0003EA A6 29            [ 1]  970 	ld	a, #0x29
      0003EC F7               [ 1]  971 	ld	(x), a
      0003ED 20 05            [ 2]  972 	jra	00115$
      0003EF                        973 00114$:
                                    974 ;	se8r01-receive-car.c: 372: { temp[0]=0x14;}
      0003EF 1E 06            [ 2]  975 	ldw	x, (0x06, sp)
      0003F1 A6 14            [ 1]  976 	ld	a, #0x14
      0003F3 F7               [ 1]  977 	ld	(x), a
      0003F4                        978 00115$:
                                    979 ;	se8r01-receive-car.c: 374: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FDEV, temp, 1);
      0003F4 1E 06            [ 2]  980 	ldw	x, (0x06, sp)
      0003F6 4B 01            [ 1]  981 	push	#0x01
      0003F8 89               [ 2]  982 	pushw	x
      0003F9 4B 2C            [ 1]  983 	push	#0x2c
      0003FB CDr00rA8         [ 4]  984 	call	_write_spi_buf
      0003FE 5B 04            [ 2]  985 	addw	sp, #4
                                    986 ;	se8r01-receive-car.c: 376: temp[0]=0x00;
      000400 1E 06            [ 2]  987 	ldw	x, (0x06, sp)
      000402 7F               [ 1]  988 	clr	(x)
                                    989 ;	se8r01-receive-car.c: 377: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_DAC_CAL_LOW,temp,1);
      000403 1E 06            [ 2]  990 	ldw	x, (0x06, sp)
      000405 4B 01            [ 1]  991 	push	#0x01
      000407 89               [ 2]  992 	pushw	x
      000408 4B 37            [ 1]  993 	push	#0x37
      00040A CDr00rA8         [ 4]  994 	call	_write_spi_buf
      00040D 5B 04            [ 2]  995 	addw	sp, #4
                                    996 ;	se8r01-receive-car.c: 379: temp[0]=0x7F;
      00040F 1E 06            [ 2]  997 	ldw	x, (0x06, sp)
      000411 A6 7F            [ 1]  998 	ld	a, #0x7f
      000413 F7               [ 1]  999 	ld	(x), a
                                   1000 ;	se8r01-receive-car.c: 380: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_DAC_CAL_HI,temp,1);
      000414 1E 06            [ 2] 1001 	ldw	x, (0x06, sp)
      000416 4B 01            [ 1] 1002 	push	#0x01
      000418 89               [ 2] 1003 	pushw	x
      000419 4B 38            [ 1] 1004 	push	#0x38
      00041B CDr00rA8         [ 4] 1005 	call	_write_spi_buf
      00041E 5B 04            [ 2] 1006 	addw	sp, #4
                                   1007 ;	se8r01-receive-car.c: 382: temp[0]=0x02;
      000420 1E 06            [ 2] 1008 	ldw	x, (0x06, sp)
      000422 A6 02            [ 1] 1009 	ld	a, #0x02
      000424 F7               [ 1] 1010 	ld	(x), a
                                   1011 ;	se8r01-receive-car.c: 383: temp[1]=0xC1;
      000425 1E 0C            [ 2] 1012 	ldw	x, (0x0c, sp)
      000427 A6 C1            [ 1] 1013 	ld	a, #0xc1
      000429 F7               [ 1] 1014 	ld	(x), a
                                   1015 ;	se8r01-receive-car.c: 384: temp[2]=0xEB;            
      00042A 1E 0A            [ 2] 1016 	ldw	x, (0x0a, sp)
      00042C A6 EB            [ 1] 1017 	ld	a, #0xeb
      00042E F7               [ 1] 1018 	ld	(x), a
                                   1019 ;	se8r01-receive-car.c: 385: temp[3]=0x1C;
      00042F 1E 08            [ 2] 1020 	ldw	x, (0x08, sp)
      000431 A6 1C            [ 1] 1021 	ld	a, #0x1c
      000433 F7               [ 1] 1022 	ld	(x), a
                                   1023 ;	se8r01-receive-car.c: 386: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_AGC_GAIN, temp,4);
      000434 1E 06            [ 2] 1024 	ldw	x, (0x06, sp)
      000436 4B 04            [ 1] 1025 	push	#0x04
      000438 89               [ 2] 1026 	pushw	x
      000439 4B 3D            [ 1] 1027 	push	#0x3d
      00043B CDr00rA8         [ 4] 1028 	call	_write_spi_buf
      00043E 5B 04            [ 2] 1029 	addw	sp, #4
                                   1030 ;	se8r01-receive-car.c: 388: temp[0]=0x97;
      000440 1E 06            [ 2] 1031 	ldw	x, (0x06, sp)
      000442 A6 97            [ 1] 1032 	ld	a, #0x97
      000444 F7               [ 1] 1033 	ld	(x), a
                                   1034 ;	se8r01-receive-car.c: 389: temp[1]=0x64;
      000445 1E 0C            [ 2] 1035 	ldw	x, (0x0c, sp)
      000447 A6 64            [ 1] 1036 	ld	a, #0x64
      000449 F7               [ 1] 1037 	ld	(x), a
                                   1038 ;	se8r01-receive-car.c: 390: temp[2]=0x00;
      00044A 1E 0A            [ 2] 1039 	ldw	x, (0x0a, sp)
      00044C 7F               [ 1] 1040 	clr	(x)
                                   1041 ;	se8r01-receive-car.c: 391: temp[3]=0x81;
      00044D 1E 08            [ 2] 1042 	ldw	x, (0x08, sp)
      00044F A6 81            [ 1] 1043 	ld	a, #0x81
      000451 F7               [ 1] 1044 	ld	(x), a
                                   1045 ;	se8r01-receive-car.c: 392: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RF_IVGEN, temp, 4);
      000452 1E 06            [ 2] 1046 	ldw	x, (0x06, sp)
      000454 4B 04            [ 1] 1047 	push	#0x04
      000456 89               [ 2] 1048 	pushw	x
      000457 4B 3E            [ 1] 1049 	push	#0x3e
      000459 CDr00rA8         [ 4] 1050 	call	_write_spi_buf
      00045C 5B 04            [ 2] 1051 	addw	sp, #4
                                   1052 ;	se8r01-receive-car.c: 393: rf_switch_bank(iBANK0);
      00045E 4B 00            [ 1] 1053 	push	#0x00
      000460 CDr02rC4         [ 4] 1054 	call	_rf_switch_bank
      000463 84               [ 1] 1055 	pop	a
                                   1056 ;	se8r01-receive-car.c: 398: delayTenMicro();
      000464 CDr00r00         [ 4] 1057 	call	_delayTenMicro
                                   1058 ;	se8r01-receive-car.c: 399: PC_ODR |= (1 << CE);
      000467 AE 50 0A         [ 2] 1059 	ldw	x, #0x500a
      00046A F6               [ 1] 1060 	ld	a, (x)
      00046B AA 08            [ 1] 1061 	or	a, #0x08
      00046D F7               [ 1] 1062 	ld	(x), a
                                   1063 ;	se8r01-receive-car.c: 400: delayTenMicro();
      00046E CDr00r00         [ 4] 1064 	call	_delayTenMicro
                                   1065 ;	se8r01-receive-car.c: 401: delayTenMicro();
      000471 CDr00r00         [ 4] 1066 	call	_delayTenMicro
                                   1067 ;	se8r01-receive-car.c: 402: delayTenMicro();
      000474 CDr00r00         [ 4] 1068 	call	_delayTenMicro
                                   1069 ;	se8r01-receive-car.c: 403: PC_ODR &= ~(1 << CE);
      000477 AE 50 0A         [ 2] 1070 	ldw	x, #0x500a
      00047A F6               [ 1] 1071 	ld	a, (x)
      00047B A4 F7            [ 1] 1072 	and	a, #0xf7
      00047D F7               [ 1] 1073 	ld	(x), a
                                   1074 ;	se8r01-receive-car.c: 404: delay(50);                            // delay 50ms waitting for calibaration.
      00047E 4B 32            [ 1] 1075 	push	#0x32
      000480 4B 00            [ 1] 1076 	push	#0x00
      000482 CDr01r8E         [ 4] 1077 	call	_delay
      000485 5B 02            [ 2] 1078 	addw	sp, #2
                                   1079 ;	se8r01-receive-car.c: 409: delayTenMicro();
      000487 CDr00r00         [ 4] 1080 	call	_delayTenMicro
                                   1081 ;	se8r01-receive-car.c: 410: PC_ODR |= (1 << CE);
      00048A AE 50 0A         [ 2] 1082 	ldw	x, #0x500a
      00048D F6               [ 1] 1083 	ld	a, (x)
      00048E AA 08            [ 1] 1084 	or	a, #0x08
      000490 F7               [ 1] 1085 	ld	(x), a
                                   1086 ;	se8r01-receive-car.c: 411: delayTenMicro();
      000491 CDr00r00         [ 4] 1087 	call	_delayTenMicro
                                   1088 ;	se8r01-receive-car.c: 412: delayTenMicro();
      000494 CDr00r00         [ 4] 1089 	call	_delayTenMicro
                                   1090 ;	se8r01-receive-car.c: 413: delayTenMicro();
      000497 CDr00r00         [ 4] 1091 	call	_delayTenMicro
                                   1092 ;	se8r01-receive-car.c: 414: PC_ODR &= ~(1 << CE);
      00049A AE 50 0A         [ 2] 1093 	ldw	x, #0x500a
      00049D F6               [ 1] 1094 	ld	a, (x)
      00049E A4 F7            [ 1] 1095 	and	a, #0xf7
      0004A0 F7               [ 1] 1096 	ld	(x), a
                                   1097 ;	se8r01-receive-car.c: 415: delay(50);                            // delay 50ms waitting for calibaration.
      0004A1 4B 32            [ 1] 1098 	push	#0x32
      0004A3 4B 00            [ 1] 1099 	push	#0x00
      0004A5 CDr01r8E         [ 4] 1100 	call	_delay
      0004A8 5B 02            [ 2] 1101 	addw	sp, #2
      0004AA 5B 0D            [ 2] 1102 	addw	sp, #13
      0004AC 81               [ 4] 1103 	ret
                                   1104 ;	se8r01-receive-car.c: 419: void SE8R01_Analog_Init()           //SE8R01 初始化
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function SE8R01_Analog_Init
                                   1107 ;	-----------------------------------------
      0004AD                       1108 _SE8R01_Analog_Init:
      0004AD 52 15            [ 2] 1109 	sub	sp, #21
                                   1110 ;	se8r01-receive-car.c: 424: gtemp[0]=0x28;
      0004AF AEr00r00         [ 2] 1111 	ldw	x, #_gtemp+0
      0004B2 1F 14            [ 2] 1112 	ldw	(0x14, sp), x
      0004B4 1E 14            [ 2] 1113 	ldw	x, (0x14, sp)
      0004B6 A6 28            [ 1] 1114 	ld	a, #0x28
      0004B8 F7               [ 1] 1115 	ld	(x), a
                                   1116 ;	se8r01-receive-car.c: 425: gtemp[1]=0x32;
      0004B9 1E 14            [ 2] 1117 	ldw	x, (0x14, sp)
      0004BB 5C               [ 2] 1118 	incw	x
      0004BC 1F 12            [ 2] 1119 	ldw	(0x12, sp), x
      0004BE 1E 12            [ 2] 1120 	ldw	x, (0x12, sp)
      0004C0 A6 32            [ 1] 1121 	ld	a, #0x32
      0004C2 F7               [ 1] 1122 	ld	(x), a
                                   1123 ;	se8r01-receive-car.c: 426: gtemp[2]=0x80;
      0004C3 1E 14            [ 2] 1124 	ldw	x, (0x14, sp)
      0004C5 5C               [ 2] 1125 	incw	x
      0004C6 5C               [ 2] 1126 	incw	x
      0004C7 1F 10            [ 2] 1127 	ldw	(0x10, sp), x
      0004C9 1E 10            [ 2] 1128 	ldw	x, (0x10, sp)
      0004CB A6 80            [ 1] 1129 	ld	a, #0x80
      0004CD F7               [ 1] 1130 	ld	(x), a
                                   1131 ;	se8r01-receive-car.c: 427: gtemp[3]=0x90;
      0004CE 1E 14            [ 2] 1132 	ldw	x, (0x14, sp)
      0004D0 1C 00 03         [ 2] 1133 	addw	x, #0x0003
      0004D3 1F 0E            [ 2] 1134 	ldw	(0x0e, sp), x
      0004D5 1E 0E            [ 2] 1135 	ldw	x, (0x0e, sp)
      0004D7 A6 90            [ 1] 1136 	ld	a, #0x90
      0004D9 F7               [ 1] 1137 	ld	(x), a
                                   1138 ;	se8r01-receive-car.c: 428: gtemp[4]=0x00;
      0004DA 1E 14            [ 2] 1139 	ldw	x, (0x14, sp)
      0004DC 1C 00 04         [ 2] 1140 	addw	x, #0x0004
      0004DF 7F               [ 1] 1141 	clr	(x)
                                   1142 ;	se8r01-receive-car.c: 429: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_SETUP_VALUE, gtemp, 5);
      0004E0 1E 14            [ 2] 1143 	ldw	x, (0x14, sp)
      0004E2 4B 05            [ 1] 1144 	push	#0x05
      0004E4 89               [ 2] 1145 	pushw	x
      0004E5 4B 3E            [ 1] 1146 	push	#0x3e
      0004E7 CDr00rA8         [ 4] 1147 	call	_write_spi_buf
      0004EA 5B 04            [ 2] 1148 	addw	sp, #4
                                   1149 ;	se8r01-receive-car.c: 430: delay(2);
      0004EC 4B 02            [ 1] 1150 	push	#0x02
      0004EE 4B 00            [ 1] 1151 	push	#0x00
      0004F0 CDr01r8E         [ 4] 1152 	call	_delay
      0004F3 5B 02            [ 2] 1153 	addw	sp, #2
                                   1154 ;	se8r01-receive-car.c: 433: rf_switch_bank(iBANK1);
      0004F5 4B 80            [ 1] 1155 	push	#0x80
      0004F7 CDr02rC4         [ 4] 1156 	call	_rf_switch_bank
      0004FA 84               [ 1] 1157 	pop	a
                                   1158 ;	se8r01-receive-car.c: 435: temp[0]=0x40;
      0004FB 96               [ 1] 1159 	ldw	x, sp
      0004FC 5C               [ 2] 1160 	incw	x
      0004FD 1F 0C            [ 2] 1161 	ldw	(0x0c, sp), x
      0004FF 1E 0C            [ 2] 1162 	ldw	x, (0x0c, sp)
      000501 A6 40            [ 1] 1163 	ld	a, #0x40
      000503 F7               [ 1] 1164 	ld	(x), a
                                   1165 ;	se8r01-receive-car.c: 436: temp[1]=0x01;               
      000504 1E 0C            [ 2] 1166 	ldw	x, (0x0c, sp)
      000506 5C               [ 2] 1167 	incw	x
      000507 1F 0A            [ 2] 1168 	ldw	(0x0a, sp), x
      000509 1E 0A            [ 2] 1169 	ldw	x, (0x0a, sp)
      00050B A6 01            [ 1] 1170 	ld	a, #0x01
      00050D F7               [ 1] 1171 	ld	(x), a
                                   1172 ;	se8r01-receive-car.c: 437: temp[2]=0x30;               
      00050E 1E 0C            [ 2] 1173 	ldw	x, (0x0c, sp)
      000510 5C               [ 2] 1174 	incw	x
      000511 5C               [ 2] 1175 	incw	x
      000512 1F 08            [ 2] 1176 	ldw	(0x08, sp), x
      000514 1E 08            [ 2] 1177 	ldw	x, (0x08, sp)
      000516 A6 30            [ 1] 1178 	ld	a, #0x30
      000518 F7               [ 1] 1179 	ld	(x), a
                                   1180 ;	se8r01-receive-car.c: 439: { temp[3]=0xE2; }              
      000519 1E 0C            [ 2] 1181 	ldw	x, (0x0c, sp)
      00051B 1C 00 03         [ 2] 1182 	addw	x, #0x0003
      00051E 1F 06            [ 2] 1183 	ldw	(0x06, sp), x
                                   1184 ;	se8r01-receive-car.c: 438: if (SE8R01_DR_2M==1)
      000520 CEu00u00         [ 2] 1185 	ldw	x, _SE8R01_DR_2M+0
      000523 A3 00 01         [ 2] 1186 	cpw	x, #0x0001
      000526 26 07            [ 1] 1187 	jrne	00102$
                                   1188 ;	se8r01-receive-car.c: 439: { temp[3]=0xE2; }              
      000528 1E 06            [ 2] 1189 	ldw	x, (0x06, sp)
      00052A A6 E2            [ 1] 1190 	ld	a, #0xe2
      00052C F7               [ 1] 1191 	ld	(x), a
      00052D 20 05            [ 2] 1192 	jra	00103$
      00052F                       1193 00102$:
                                   1194 ;	se8r01-receive-car.c: 441: { temp[3]=0xE0;}
      00052F 1E 06            [ 2] 1195 	ldw	x, (0x06, sp)
      000531 A6 E0            [ 1] 1196 	ld	a, #0xe0
      000533 F7               [ 1] 1197 	ld	(x), a
      000534                       1198 00103$:
                                   1199 ;	se8r01-receive-car.c: 443: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_PLL_CTL0, temp,4);
      000534 1E 0C            [ 2] 1200 	ldw	x, (0x0c, sp)
      000536 4B 04            [ 1] 1201 	push	#0x04
      000538 89               [ 2] 1202 	pushw	x
      000539 4B 21            [ 1] 1203 	push	#0x21
      00053B CDr00rA8         [ 4] 1204 	call	_write_spi_buf
      00053E 5B 04            [ 2] 1205 	addw	sp, #4
                                   1206 ;	se8r01-receive-car.c: 445: temp[0]=0x29;
      000540 1E 0C            [ 2] 1207 	ldw	x, (0x0c, sp)
      000542 A6 29            [ 1] 1208 	ld	a, #0x29
      000544 F7               [ 1] 1209 	ld	(x), a
                                   1210 ;	se8r01-receive-car.c: 446: temp[1]=0x89;
      000545 1E 0A            [ 2] 1211 	ldw	x, (0x0a, sp)
      000547 A6 89            [ 1] 1212 	ld	a, #0x89
      000549 F7               [ 1] 1213 	ld	(x), a
                                   1214 ;	se8r01-receive-car.c: 447: temp[2]=0x55;                     
      00054A 1E 08            [ 2] 1215 	ldw	x, (0x08, sp)
      00054C A6 55            [ 1] 1216 	ld	a, #0x55
      00054E F7               [ 1] 1217 	ld	(x), a
                                   1218 ;	se8r01-receive-car.c: 448: temp[3]=0x40;
      00054F 1E 06            [ 2] 1219 	ldw	x, (0x06, sp)
      000551 A6 40            [ 1] 1220 	ld	a, #0x40
      000553 F7               [ 1] 1221 	ld	(x), a
                                   1222 ;	se8r01-receive-car.c: 449: temp[4]=0x50;
      000554 1E 0C            [ 2] 1223 	ldw	x, (0x0c, sp)
      000556 A6 50            [ 1] 1224 	ld	a, #0x50
      000558 E7 04            [ 1] 1225 	ld	(0x0004, x), a
                                   1226 ;	se8r01-receive-car.c: 450: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_CAL_CTL, temp,5);
      00055A 1E 0C            [ 2] 1227 	ldw	x, (0x0c, sp)
      00055C 4B 05            [ 1] 1228 	push	#0x05
      00055E 89               [ 2] 1229 	pushw	x
      00055F 4B 23            [ 1] 1230 	push	#0x23
      000561 CDr00rA8         [ 4] 1231 	call	_write_spi_buf
      000564 5B 04            [ 2] 1232 	addw	sp, #4
                                   1233 ;	se8r01-receive-car.c: 452: if (SE8R01_DR_2M==1)
      000566 CEu00u00         [ 2] 1234 	ldw	x, _SE8R01_DR_2M+0
      000569 A3 00 01         [ 2] 1235 	cpw	x, #0x0001
      00056C 26 07            [ 1] 1236 	jrne	00105$
                                   1237 ;	se8r01-receive-car.c: 453: { temp[0]=0x29;}
      00056E 1E 0C            [ 2] 1238 	ldw	x, (0x0c, sp)
      000570 A6 29            [ 1] 1239 	ld	a, #0x29
      000572 F7               [ 1] 1240 	ld	(x), a
      000573 20 05            [ 2] 1241 	jra	00106$
      000575                       1242 00105$:
                                   1243 ;	se8r01-receive-car.c: 455: { temp[0]=0x14;}
      000575 1E 0C            [ 2] 1244 	ldw	x, (0x0c, sp)
      000577 A6 14            [ 1] 1245 	ld	a, #0x14
      000579 F7               [ 1] 1246 	ld	(x), a
      00057A                       1247 00106$:
                                   1248 ;	se8r01-receive-car.c: 457: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FDEV, temp,1);
      00057A 1E 0C            [ 2] 1249 	ldw	x, (0x0c, sp)
      00057C 4B 01            [ 1] 1250 	push	#0x01
      00057E 89               [ 2] 1251 	pushw	x
      00057F 4B 2C            [ 1] 1252 	push	#0x2c
      000581 CDr00rA8         [ 4] 1253 	call	_write_spi_buf
      000584 5B 04            [ 2] 1254 	addw	sp, #4
                                   1255 ;	se8r01-receive-car.c: 459: temp[0]=0x55;
      000586 1E 0C            [ 2] 1256 	ldw	x, (0x0c, sp)
      000588 A6 55            [ 1] 1257 	ld	a, #0x55
      00058A F7               [ 1] 1258 	ld	(x), a
                                   1259 ;	se8r01-receive-car.c: 460: temp[1]=0xC2;
      00058B 1E 0A            [ 2] 1260 	ldw	x, (0x0a, sp)
      00058D A6 C2            [ 1] 1261 	ld	a, #0xc2
      00058F F7               [ 1] 1262 	ld	(x), a
                                   1263 ;	se8r01-receive-car.c: 461: temp[2]=0x09;
      000590 1E 08            [ 2] 1264 	ldw	x, (0x08, sp)
      000592 A6 09            [ 1] 1265 	ld	a, #0x09
      000594 F7               [ 1] 1266 	ld	(x), a
                                   1267 ;	se8r01-receive-car.c: 462: temp[3]=0xAC;  
      000595 1E 06            [ 2] 1268 	ldw	x, (0x06, sp)
      000597 A6 AC            [ 1] 1269 	ld	a, #0xac
      000599 F7               [ 1] 1270 	ld	(x), a
                                   1271 ;	se8r01-receive-car.c: 463: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RX_CTRL,temp,4);
      00059A 1E 0C            [ 2] 1272 	ldw	x, (0x0c, sp)
      00059C 4B 04            [ 1] 1273 	push	#0x04
      00059E 89               [ 2] 1274 	pushw	x
      00059F 4B 31            [ 1] 1275 	push	#0x31
      0005A1 CDr00rA8         [ 4] 1276 	call	_write_spi_buf
      0005A4 5B 04            [ 2] 1277 	addw	sp, #4
                                   1278 ;	se8r01-receive-car.c: 465: temp[0]=0x00;
      0005A6 1E 0C            [ 2] 1279 	ldw	x, (0x0c, sp)
      0005A8 7F               [ 1] 1280 	clr	(x)
                                   1281 ;	se8r01-receive-car.c: 466: temp[1]=0x14;
      0005A9 1E 0A            [ 2] 1282 	ldw	x, (0x0a, sp)
      0005AB A6 14            [ 1] 1283 	ld	a, #0x14
      0005AD F7               [ 1] 1284 	ld	(x), a
                                   1285 ;	se8r01-receive-car.c: 467: temp[2]=0x08;   
      0005AE 1E 08            [ 2] 1286 	ldw	x, (0x08, sp)
      0005B0 A6 08            [ 1] 1287 	ld	a, #0x08
      0005B2 F7               [ 1] 1288 	ld	(x), a
                                   1289 ;	se8r01-receive-car.c: 468: temp[3]=0x29;
      0005B3 1E 06            [ 2] 1290 	ldw	x, (0x06, sp)
      0005B5 A6 29            [ 1] 1291 	ld	a, #0x29
      0005B7 F7               [ 1] 1292 	ld	(x), a
                                   1293 ;	se8r01-receive-car.c: 469: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FAGC_CTRL_1, temp,4);
      0005B8 1E 0C            [ 2] 1294 	ldw	x, (0x0c, sp)
      0005BA 4B 04            [ 1] 1295 	push	#0x04
      0005BC 89               [ 2] 1296 	pushw	x
      0005BD 4B 33            [ 1] 1297 	push	#0x33
      0005BF CDr00rA8         [ 4] 1298 	call	_write_spi_buf
      0005C2 5B 04            [ 2] 1299 	addw	sp, #4
                                   1300 ;	se8r01-receive-car.c: 471: temp[0]=0x02;
      0005C4 1E 0C            [ 2] 1301 	ldw	x, (0x0c, sp)
      0005C6 A6 02            [ 1] 1302 	ld	a, #0x02
      0005C8 F7               [ 1] 1303 	ld	(x), a
                                   1304 ;	se8r01-receive-car.c: 472: temp[1]=0xC1;
      0005C9 1E 0A            [ 2] 1305 	ldw	x, (0x0a, sp)
      0005CB A6 C1            [ 1] 1306 	ld	a, #0xc1
      0005CD F7               [ 1] 1307 	ld	(x), a
                                   1308 ;	se8r01-receive-car.c: 473: temp[2]=0xCB;  
      0005CE 1E 08            [ 2] 1309 	ldw	x, (0x08, sp)
      0005D0 A6 CB            [ 1] 1310 	ld	a, #0xcb
      0005D2 F7               [ 1] 1311 	ld	(x), a
                                   1312 ;	se8r01-receive-car.c: 474: temp[3]=0x1C;
      0005D3 1E 06            [ 2] 1313 	ldw	x, (0x06, sp)
      0005D5 A6 1C            [ 1] 1314 	ld	a, #0x1c
      0005D7 F7               [ 1] 1315 	ld	(x), a
                                   1316 ;	se8r01-receive-car.c: 475: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_AGC_GAIN, temp,4);
      0005D8 1E 0C            [ 2] 1317 	ldw	x, (0x0c, sp)
      0005DA 4B 04            [ 1] 1318 	push	#0x04
      0005DC 89               [ 2] 1319 	pushw	x
      0005DD 4B 3D            [ 1] 1320 	push	#0x3d
      0005DF CDr00rA8         [ 4] 1321 	call	_write_spi_buf
      0005E2 5B 04            [ 2] 1322 	addw	sp, #4
                                   1323 ;	se8r01-receive-car.c: 477: temp[0]=0x97;
      0005E4 1E 0C            [ 2] 1324 	ldw	x, (0x0c, sp)
      0005E6 A6 97            [ 1] 1325 	ld	a, #0x97
      0005E8 F7               [ 1] 1326 	ld	(x), a
                                   1327 ;	se8r01-receive-car.c: 478: temp[1]=0x64;
      0005E9 1E 0A            [ 2] 1328 	ldw	x, (0x0a, sp)
      0005EB A6 64            [ 1] 1329 	ld	a, #0x64
      0005ED F7               [ 1] 1330 	ld	(x), a
                                   1331 ;	se8r01-receive-car.c: 479: temp[2]=0x00;
      0005EE 1E 08            [ 2] 1332 	ldw	x, (0x08, sp)
      0005F0 7F               [ 1] 1333 	clr	(x)
                                   1334 ;	se8r01-receive-car.c: 480: temp[3]=0x01;
      0005F1 1E 06            [ 2] 1335 	ldw	x, (0x06, sp)
      0005F3 A6 01            [ 1] 1336 	ld	a, #0x01
      0005F5 F7               [ 1] 1337 	ld	(x), a
                                   1338 ;	se8r01-receive-car.c: 481: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RF_IVGEN, temp,4);
      0005F6 1E 0C            [ 2] 1339 	ldw	x, (0x0c, sp)
      0005F8 4B 04            [ 1] 1340 	push	#0x04
      0005FA 89               [ 2] 1341 	pushw	x
      0005FB 4B 3E            [ 1] 1342 	push	#0x3e
      0005FD CDr00rA8         [ 4] 1343 	call	_write_spi_buf
      000600 5B 04            [ 2] 1344 	addw	sp, #4
                                   1345 ;	se8r01-receive-car.c: 483: gtemp[0]=0x2A;
      000602 1E 14            [ 2] 1346 	ldw	x, (0x14, sp)
      000604 A6 2A            [ 1] 1347 	ld	a, #0x2a
      000606 F7               [ 1] 1348 	ld	(x), a
                                   1349 ;	se8r01-receive-car.c: 484: gtemp[1]=0x04;
      000607 1E 12            [ 2] 1350 	ldw	x, (0x12, sp)
      000609 A6 04            [ 1] 1351 	ld	a, #0x04
      00060B F7               [ 1] 1352 	ld	(x), a
                                   1353 ;	se8r01-receive-car.c: 485: gtemp[2]=0x00;
      00060C 1E 10            [ 2] 1354 	ldw	x, (0x10, sp)
      00060E 7F               [ 1] 1355 	clr	(x)
                                   1356 ;	se8r01-receive-car.c: 486: gtemp[3]=0x7D;
      00060F 1E 0E            [ 2] 1357 	ldw	x, (0x0e, sp)
      000611 A6 7D            [ 1] 1358 	ld	a, #0x7d
      000613 F7               [ 1] 1359 	ld	(x), a
                                   1360 ;	se8r01-receive-car.c: 487: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK1_TEST_PKDET, gtemp, 4);
      000614 1E 14            [ 2] 1361 	ldw	x, (0x14, sp)
      000616 4B 04            [ 1] 1362 	push	#0x04
      000618 89               [ 2] 1363 	pushw	x
      000619 4B 3F            [ 1] 1364 	push	#0x3f
      00061B CDr00rA8         [ 4] 1365 	call	_write_spi_buf
      00061E 5B 04            [ 2] 1366 	addw	sp, #4
                                   1367 ;	se8r01-receive-car.c: 489: rf_switch_bank(iBANK0);
      000620 4B 00            [ 1] 1368 	push	#0x00
      000622 CDr02rC4         [ 4] 1369 	call	_rf_switch_bank
      000625 84               [ 1] 1370 	pop	a
      000626 5B 15            [ 2] 1371 	addw	sp, #21
      000628 81               [ 4] 1372 	ret
                                   1373 ;	se8r01-receive-car.c: 492: void SE8R01_Init()  
                                   1374 ;	-----------------------------------------
                                   1375 ;	 function SE8R01_Init
                                   1376 ;	-----------------------------------------
      000629                       1377 _SE8R01_Init:
      000629 52 05            [ 2] 1378 	sub	sp, #5
                                   1379 ;	se8r01-receive-car.c: 495: SE8R01_Calibration();   
      00062B CDr02rE1         [ 4] 1380 	call	_SE8R01_Calibration
                                   1381 ;	se8r01-receive-car.c: 496: SE8R01_Analog_Init();   
      00062E CDr04rAD         [ 4] 1382 	call	_SE8R01_Analog_Init
                                   1383 ;	se8r01-receive-car.c: 500: if (SE8R01_DR_2M==1)
      000631 CEu00u00         [ 2] 1384 	ldw	x, _SE8R01_DR_2M+0
      000634 A3 00 01         [ 2] 1385 	cpw	x, #0x0001
      000637 26 07            [ 1] 1386 	jrne	00105$
                                   1387 ;	se8r01-receive-car.c: 501: {  temp[0]=0b01001111; }     //2MHz,+5dbm
      000639 96               [ 1] 1388 	ldw	x, sp
      00063A 5C               [ 2] 1389 	incw	x
      00063B A6 4F            [ 1] 1390 	ld	a, #0x4f
      00063D F7               [ 1] 1391 	ld	(x), a
      00063E 20 14            [ 2] 1392 	jra	00106$
      000640                       1393 00105$:
                                   1394 ;	se8r01-receive-car.c: 502: else if  (SE8R01_DR_1M==1)
      000640 CEu00u02         [ 2] 1395 	ldw	x, _SE8R01_DR_1M+0
      000643 A3 00 01         [ 2] 1396 	cpw	x, #0x0001
      000646 26 07            [ 1] 1397 	jrne	00102$
                                   1398 ;	se8r01-receive-car.c: 503: {  temp[0]=0b01000111;  }     //1MHz,+5dbm
      000648 96               [ 1] 1399 	ldw	x, sp
      000649 5C               [ 2] 1400 	incw	x
      00064A A6 47            [ 1] 1401 	ld	a, #0x47
      00064C F7               [ 1] 1402 	ld	(x), a
      00064D 20 05            [ 2] 1403 	jra	00106$
      00064F                       1404 00102$:
                                   1405 ;	se8r01-receive-car.c: 505: {temp[0]=0b01101111;  }     //500K,+5dbm
      00064F 96               [ 1] 1406 	ldw	x, sp
      000650 5C               [ 2] 1407 	incw	x
      000651 A6 6F            [ 1] 1408 	ld	a, #0x6f
      000653 F7               [ 1] 1409 	ld	(x), a
      000654                       1410 00106$:
                                   1411 ;	se8r01-receive-car.c: 507: write_spi_buf(iRF_CMD_WRITE_REG|iRF_BANK0_RF_SETUP,temp,1);
      000654 96               [ 1] 1412 	ldw	x, sp
      000655 5C               [ 2] 1413 	incw	x
      000656 4B 01            [ 1] 1414 	push	#0x01
      000658 89               [ 2] 1415 	pushw	x
      000659 4B 26            [ 1] 1416 	push	#0x26
      00065B CDr00rA8         [ 4] 1417 	call	_write_spi_buf
      00065E 5B 04            [ 2] 1418 	addw	sp, #4
                                   1419 ;	se8r01-receive-car.c: 508: write_spi_reg(WRITE_REG|iRF_BANK0_EN_AA, 0b00111111);          //enable auto acc on pip 1
      000660 4B 3F            [ 1] 1420 	push	#0x3f
      000662 4B 21            [ 1] 1421 	push	#0x21
      000664 CDr00r2E         [ 4] 1422 	call	_write_spi_reg
      000667 5B 02            [ 2] 1423 	addw	sp, #2
                                   1424 ;	se8r01-receive-car.c: 509: write_spi_reg(WRITE_REG|iRF_BANK0_EN_RXADDR, 0b00111111);      //enable pip 1
      000669 4B 3F            [ 1] 1425 	push	#0x3f
      00066B 4B 22            [ 1] 1426 	push	#0x22
      00066D CDr00r2E         [ 4] 1427 	call	_write_spi_reg
      000670 5B 02            [ 2] 1428 	addw	sp, #2
                                   1429 ;	se8r01-receive-car.c: 510: write_spi_reg(WRITE_REG|iRF_BANK0_SETUP_AW, 0x02);  
      000672 4B 02            [ 1] 1430 	push	#0x02
      000674 4B 23            [ 1] 1431 	push	#0x23
      000676 CDr00r2E         [ 4] 1432 	call	_write_spi_reg
      000679 5B 02            [ 2] 1433 	addw	sp, #2
                                   1434 ;	se8r01-receive-car.c: 511: write_spi_reg(WRITE_REG|iRF_BANK0_RF_CH, 40);
      00067B 4B 28            [ 1] 1435 	push	#0x28
      00067D 4B 25            [ 1] 1436 	push	#0x25
      00067F CDr00r2E         [ 4] 1437 	call	_write_spi_reg
      000682 5B 02            [ 2] 1438 	addw	sp, #2
                                   1439 ;	se8r01-receive-car.c: 513: write_spi_buf(WRITE_REG + TX_ADDR, ADDRESS0, ADR_WIDTH);    	
      000684 AEr00r1A         [ 2] 1440 	ldw	x, #_ADDRESS0+0
      000687 90 93            [ 1] 1441 	ldw	y, x
      000689 89               [ 2] 1442 	pushw	x
      00068A 4B 04            [ 1] 1443 	push	#0x04
      00068C 90 89            [ 2] 1444 	pushw	y
      00068E 4B 30            [ 1] 1445 	push	#0x30
      000690 CDr00rA8         [ 4] 1446 	call	_write_spi_buf
      000693 5B 04            [ 2] 1447 	addw	sp, #4
      000695 85               [ 2] 1448 	popw	x
                                   1449 ;	se8r01-receive-car.c: 514: write_spi_buf(WRITE_REG + RX_ADDR_P0, ADDRESS0, ADR_WIDTH); 
      000696 4B 04            [ 1] 1450 	push	#0x04
      000698 89               [ 2] 1451 	pushw	x
      000699 4B 2A            [ 1] 1452 	push	#0x2a
      00069B CDr00rA8         [ 4] 1453 	call	_write_spi_buf
      00069E 5B 04            [ 2] 1454 	addw	sp, #4
                                   1455 ;	se8r01-receive-car.c: 515: write_spi_buf(WRITE_REG + RX_ADDR_P1, ADDRESS1, ADR_WIDTH); 
      0006A0 AEr00r16         [ 2] 1456 	ldw	x, #_ADDRESS1+0
      0006A3 4B 04            [ 1] 1457 	push	#0x04
      0006A5 89               [ 2] 1458 	pushw	x
      0006A6 4B 2B            [ 1] 1459 	push	#0x2b
      0006A8 CDr00rA8         [ 4] 1460 	call	_write_spi_buf
      0006AB 5B 04            [ 2] 1461 	addw	sp, #4
                                   1462 ;	se8r01-receive-car.c: 516: write_spi_buf(WRITE_REG + RX_ADDR_P2, ADDRESS2, 1); 
      0006AD AEr00r12         [ 2] 1463 	ldw	x, #_ADDRESS2+0
      0006B0 4B 01            [ 1] 1464 	push	#0x01
      0006B2 89               [ 2] 1465 	pushw	x
      0006B3 4B 2C            [ 1] 1466 	push	#0x2c
      0006B5 CDr00rA8         [ 4] 1467 	call	_write_spi_buf
      0006B8 5B 04            [ 2] 1468 	addw	sp, #4
                                   1469 ;	se8r01-receive-car.c: 517: write_spi_buf(WRITE_REG + RX_ADDR_P3, ADDRESS3, 1); 
      0006BA AEr00r13         [ 2] 1470 	ldw	x, #_ADDRESS3+0
      0006BD 4B 01            [ 1] 1471 	push	#0x01
      0006BF 89               [ 2] 1472 	pushw	x
      0006C0 4B 2D            [ 1] 1473 	push	#0x2d
      0006C2 CDr00rA8         [ 4] 1474 	call	_write_spi_buf
      0006C5 5B 04            [ 2] 1475 	addw	sp, #4
                                   1476 ;	se8r01-receive-car.c: 518: write_spi_buf(WRITE_REG + RX_ADDR_P4, ADDRESS4, 1); 
      0006C7 AEr00r14         [ 2] 1477 	ldw	x, #_ADDRESS4+0
      0006CA 4B 01            [ 1] 1478 	push	#0x01
      0006CC 89               [ 2] 1479 	pushw	x
      0006CD 4B 2E            [ 1] 1480 	push	#0x2e
      0006CF CDr00rA8         [ 4] 1481 	call	_write_spi_buf
      0006D2 5B 04            [ 2] 1482 	addw	sp, #4
                                   1483 ;	se8r01-receive-car.c: 519: write_spi_buf(WRITE_REG + RX_ADDR_P5, ADDRESS5, 1); 
      0006D4 AEr00r15         [ 2] 1484 	ldw	x, #_ADDRESS5+0
      0006D7 4B 01            [ 1] 1485 	push	#0x01
      0006D9 89               [ 2] 1486 	pushw	x
      0006DA 4B 2F            [ 1] 1487 	push	#0x2f
      0006DC CDr00rA8         [ 4] 1488 	call	_write_spi_buf
      0006DF 5B 04            [ 2] 1489 	addw	sp, #4
                                   1490 ;	se8r01-receive-car.c: 520: write_spi_reg(WRITE_REG + RX_PW_P0, PLOAD_WIDTH); 
      0006E1 4B 20            [ 1] 1491 	push	#0x20
      0006E3 4B 31            [ 1] 1492 	push	#0x31
      0006E5 CDr00r2E         [ 4] 1493 	call	_write_spi_reg
      0006E8 5B 02            [ 2] 1494 	addw	sp, #2
                                   1495 ;	se8r01-receive-car.c: 521: write_spi_reg(WRITE_REG|iRF_BANK0_CONFIG, 0x3f); 
      0006EA 4B 3F            [ 1] 1496 	push	#0x3f
      0006EC 4B 20            [ 1] 1497 	push	#0x20
      0006EE CDr00r2E         [ 4] 1498 	call	_write_spi_reg
      0006F1 5B 02            [ 2] 1499 	addw	sp, #2
                                   1500 ;	se8r01-receive-car.c: 522: write_spi_reg(WRITE_REG|iRF_BANK0_DYNPD, 0b00111111);          // enable dynamic payload length data
      0006F3 4B 3F            [ 1] 1501 	push	#0x3f
      0006F5 4B 3C            [ 1] 1502 	push	#0x3c
      0006F7 CDr00r2E         [ 4] 1503 	call	_write_spi_reg
      0006FA 5B 02            [ 2] 1504 	addw	sp, #2
                                   1505 ;	se8r01-receive-car.c: 523: write_spi_reg(WRITE_REG|iRF_BANK0_FEATURE, 0x07);        // enable dynamic paload lenght; enbale payload with ack enable w_tx_payload_noack
      0006FC 4B 07            [ 1] 1506 	push	#0x07
      0006FE 4B 3D            [ 1] 1507 	push	#0x3d
      000700 CDr00r2E         [ 4] 1508 	call	_write_spi_reg
      000703 5B 02            [ 2] 1509 	addw	sp, #2
                                   1510 ;	se8r01-receive-car.c: 524: PC_ODR |= (1 << CE);
      000705 AE 50 0A         [ 2] 1511 	ldw	x, #0x500a
      000708 F6               [ 1] 1512 	ld	a, (x)
      000709 AA 08            [ 1] 1513 	or	a, #0x08
      00070B F7               [ 1] 1514 	ld	(x), a
      00070C 5B 05            [ 2] 1515 	addw	sp, #5
      00070E 81               [ 4] 1516 	ret
                                   1517 ;	se8r01-receive-car.c: 529: void Init_Tim2 ()
                                   1518 ;	-----------------------------------------
                                   1519 ;	 function Init_Tim2
                                   1520 ;	-----------------------------------------
      00070F                       1521 _Init_Tim2:
                                   1522 ;	se8r01-receive-car.c: 553: TIM2_CCMR3 |=0X70;//Set the timer 2 / three channel three (PD2) output mode
      00070F AE 53 09         [ 2] 1523 	ldw	x, #0x5309
      000712 F6               [ 1] 1524 	ld	a, (x)
      000713 AA 70            [ 1] 1525 	or	a, #0x70
      000715 F7               [ 1] 1526 	ld	(x), a
                                   1527 ;	se8r01-receive-car.c: 554: TIM2_CCMR3 |=0X04;//Comparison of 3 pre load / / output enable
      000716 AE 53 09         [ 2] 1528 	ldw	x, #0x5309
      000719 F6               [ 1] 1529 	ld	a, (x)
      00071A AA 04            [ 1] 1530 	or	a, #0x04
      00071C F7               [ 1] 1531 	ld	(x), a
                                   1532 ;	se8r01-receive-car.c: 556: TIM2_CCER2 |=0x03;//  Channel 3 enable, active low output configuration
      00071D AE 53 0B         [ 2] 1533 	ldw	x, #0x530b
      000720 F6               [ 1] 1534 	ld	a, (x)
      000721 AA 03            [ 1] 1535 	or	a, #0x03
      000723 F7               [ 1] 1536 	ld	(x), a
                                   1537 ;	se8r01-receive-car.c: 558: TIM2_PSCR =0X04;// 16 Mhz/2^4 =  1Mhz  -- the prescaler is a 4 bit number!
      000724 AE 53 0E         [ 2] 1538 	ldw	x, #0x530e
      000727 A6 04            [ 1] 1539 	ld	a, #0x04
      000729 F7               [ 1] 1540 	ld	(x), a
                                   1541 ;	se8r01-receive-car.c: 562: TIM2_ARRH =20000/256; // auto reload register
      00072A AE 53 0F         [ 2] 1542 	ldw	x, #0x530f
      00072D A6 4E            [ 1] 1543 	ld	a, #0x4e
      00072F F7               [ 1] 1544 	ld	(x), a
                                   1545 ;	se8r01-receive-car.c: 563: TIM2_ARRL =20000%256; // 1000 Khz/20000 is 50 events per second 
      000730 AE 53 10         [ 2] 1546 	ldw	x, #0x5310
      000733 A6 20            [ 1] 1547 	ld	a, #0x20
      000735 F7               [ 1] 1548 	ld	(x), a
                                   1549 ;	se8r01-receive-car.c: 567: TIM2_CCR3H =1000/256; //compare capture register value
      000736 AE 53 15         [ 2] 1550 	ldw	x, #0x5315
      000739 A6 03            [ 1] 1551 	ld	a, #0x03
      00073B F7               [ 1] 1552 	ld	(x), a
                                   1553 ;	se8r01-receive-car.c: 568: TIM2_CCR3L =1000%256;
      00073C AE 53 16         [ 2] 1554 	ldw	x, #0x5316
      00073F A6 E8            [ 1] 1555 	ld	a, #0xe8
      000741 F7               [ 1] 1556 	ld	(x), a
                                   1557 ;	se8r01-receive-car.c: 569: UARTPrintF("timer init 1 = \n\r");
      000742 AEr0ArD7         [ 2] 1558 	ldw	x, #___str_0+0
      000745 89               [ 2] 1559 	pushw	x
      000746 CDr01rD9         [ 4] 1560 	call	_UARTPrintF
      000749 5B 02            [ 2] 1561 	addw	sp, #2
                                   1562 ;	se8r01-receive-car.c: 577: TIM2_CCER1 =0x03;//  Channel 1 enable, active low output configuration
      00074B AE 53 0A         [ 2] 1563 	ldw	x, #0x530a
      00074E A6 03            [ 1] 1564 	ld	a, #0x03
      000750 F7               [ 1] 1565 	ld	(x), a
                                   1566 ;	se8r01-receive-car.c: 578: TIM2_CCMR2 = 0x03;
      000751 AE 53 08         [ 2] 1567 	ldw	x, #0x5308
      000754 A6 03            [ 1] 1568 	ld	a, #0x03
      000756 F7               [ 1] 1569 	ld	(x), a
                                   1570 ;	se8r01-receive-car.c: 579: TIM2_CCMR1 =0X70;//Set the timer 2 / channel 1 output
      000757 AE 53 07         [ 2] 1571 	ldw	x, #0x5307
      00075A A6 70            [ 1] 1572 	ld	a, #0x70
      00075C F7               [ 1] 1573 	ld	(x), a
                                   1574 ;	se8r01-receive-car.c: 584: TIM2_CCR1H =10000/256; //compare capture register value for channel 1
      00075D AE 53 11         [ 2] 1575 	ldw	x, #0x5311
      000760 A6 27            [ 1] 1576 	ld	a, #0x27
      000762 F7               [ 1] 1577 	ld	(x), a
                                   1578 ;	se8r01-receive-car.c: 585: TIM2_CCR1L =10000%256;
      000763 AE 53 12         [ 2] 1579 	ldw	x, #0x5312
      000766 A6 10            [ 1] 1580 	ld	a, #0x10
      000768 F7               [ 1] 1581 	ld	(x), a
                                   1582 ;	se8r01-receive-car.c: 589: UARTPrintF("timer init 2 = \n\r");
      000769 AEr0ArE9         [ 2] 1583 	ldw	x, #___str_1+0
      00076C 89               [ 2] 1584 	pushw	x
      00076D CDr01rD9         [ 4] 1585 	call	_UARTPrintF
      000770 5B 02            [ 2] 1586 	addw	sp, #2
                                   1587 ;	se8r01-receive-car.c: 592: TIM2_CR1 |=0x81;
      000772 AE 53 00         [ 2] 1588 	ldw	x, #0x5300
      000775 F6               [ 1] 1589 	ld	a, (x)
      000776 AA 81            [ 1] 1590 	or	a, #0x81
      000778 F7               [ 1] 1591 	ld	(x), a
      000779 81               [ 4] 1592 	ret
                                   1593 ;	se8r01-receive-car.c: 598: int main () {
                                   1594 ;	-----------------------------------------
                                   1595 ;	 function main
                                   1596 ;	-----------------------------------------
      00077A                       1597 _main:
      00077A 52 45            [ 2] 1598 	sub	sp, #69
                                   1599 ;	se8r01-receive-car.c: 600: UCHAR rx_addr_p1[]  = { 0xd2, 0xf0, 0xf0, 0xf0, 0xf0 };
      00077C 90 96            [ 1] 1600 	ldw	y, sp
      00077E 72 A9 00 31      [ 2] 1601 	addw	y, #49
      000782 A6 D2            [ 1] 1602 	ld	a, #0xd2
      000784 90 F7            [ 1] 1603 	ld	(y), a
      000786 93               [ 1] 1604 	ldw	x, y
      000787 5C               [ 2] 1605 	incw	x
      000788 A6 F0            [ 1] 1606 	ld	a, #0xf0
      00078A F7               [ 1] 1607 	ld	(x), a
      00078B 93               [ 1] 1608 	ldw	x, y
      00078C 5C               [ 2] 1609 	incw	x
      00078D 5C               [ 2] 1610 	incw	x
      00078E A6 F0            [ 1] 1611 	ld	a, #0xf0
      000790 F7               [ 1] 1612 	ld	(x), a
      000791 93               [ 1] 1613 	ldw	x, y
      000792 A6 F0            [ 1] 1614 	ld	a, #0xf0
      000794 E7 03            [ 1] 1615 	ld	(0x0003, x), a
      000796 93               [ 1] 1616 	ldw	x, y
      000797 1C 00 04         [ 2] 1617 	addw	x, #0x0004
      00079A A6 F0            [ 1] 1618 	ld	a, #0xf0
      00079C F7               [ 1] 1619 	ld	(x), a
                                   1620 ;	se8r01-receive-car.c: 601: UCHAR tx_addr[]     = { 0xe1, 0xf0, 0xf0, 0xf0, 0xf0 };
      00079D 90 96            [ 1] 1621 	ldw	y, sp
      00079F 90 5C            [ 2] 1622 	incw	y
      0007A1 A6 E1            [ 1] 1623 	ld	a, #0xe1
      0007A3 90 F7            [ 1] 1624 	ld	(y), a
      0007A5 93               [ 1] 1625 	ldw	x, y
      0007A6 5C               [ 2] 1626 	incw	x
      0007A7 A6 F0            [ 1] 1627 	ld	a, #0xf0
      0007A9 F7               [ 1] 1628 	ld	(x), a
      0007AA 93               [ 1] 1629 	ldw	x, y
      0007AB 5C               [ 2] 1630 	incw	x
      0007AC 5C               [ 2] 1631 	incw	x
      0007AD A6 F0            [ 1] 1632 	ld	a, #0xf0
      0007AF F7               [ 1] 1633 	ld	(x), a
      0007B0 93               [ 1] 1634 	ldw	x, y
      0007B1 A6 F0            [ 1] 1635 	ld	a, #0xf0
      0007B3 E7 03            [ 1] 1636 	ld	(0x0003, x), a
      0007B5 93               [ 1] 1637 	ldw	x, y
      0007B6 1C 00 04         [ 2] 1638 	addw	x, #0x0004
      0007B9 A6 F0            [ 1] 1639 	ld	a, #0xf0
      0007BB F7               [ 1] 1640 	ld	(x), a
                                   1641 ;	se8r01-receive-car.c: 606: InitializeSystemClock();
      0007BC CDr01r44         [ 4] 1642 	call	_InitializeSystemClock
                                   1643 ;	se8r01-receive-car.c: 607: InitializeUART();
      0007BF CDr02r3C         [ 4] 1644 	call	_InitializeUART
                                   1645 ;	se8r01-receive-car.c: 609: InitializeSPI ();
      0007C2 CDr01r1C         [ 4] 1646 	call	_InitializeSPI
                                   1647 ;	se8r01-receive-car.c: 611: UARTPrintF("start debug \n\r");
      0007C5 AEr0ArFB         [ 2] 1648 	ldw	x, #___str_2+0
      0007C8 89               [ 2] 1649 	pushw	x
      0007C9 CDr01rD9         [ 4] 1650 	call	_UARTPrintF
      0007CC 5B 02            [ 2] 1651 	addw	sp, #2
                                   1652 ;	se8r01-receive-car.c: 613: memset (tx_payload, 0, sizeof(tx_payload));
      0007CE 96               [ 1] 1653 	ldw	x, sp
      0007CF 1C 00 10         [ 2] 1654 	addw	x, #16
      0007D2 4B 21            [ 1] 1655 	push	#0x21
      0007D4 4B 00            [ 1] 1656 	push	#0x00
      0007D6 4B 00            [ 1] 1657 	push	#0x00
      0007D8 4B 00            [ 1] 1658 	push	#0x00
      0007DA 89               [ 2] 1659 	pushw	x
      0007DB CDr00r00         [ 4] 1660 	call	_memset
      0007DE 5B 06            [ 2] 1661 	addw	sp, #6
                                   1662 ;	se8r01-receive-car.c: 616: init_io();    // Initialize IO port
      0007E0 CDr02rB5         [ 4] 1663 	call	_init_io
                                   1664 ;	se8r01-receive-car.c: 617: write_spi_reg(FLUSH_RX,0); // receive data 
      0007E3 4B 00            [ 1] 1665 	push	#0x00
      0007E5 4B E2            [ 1] 1666 	push	#0xe2
      0007E7 CDr00r2E         [ 4] 1667 	call	_write_spi_reg
      0007EA 5B 02            [ 2] 1668 	addw	sp, #2
                                   1669 ;	se8r01-receive-car.c: 618: readstatus = read_spi_reg(CONFIG);
      0007EC 4B 00            [ 1] 1670 	push	#0x00
      0007EE CDr00r6A         [ 4] 1671 	call	_read_spi_reg
      0007F1 5B 01            [ 2] 1672 	addw	sp, #1
                                   1673 ;	se8r01-receive-car.c: 619: UARTPrintF("config = \n\r");
      0007F3 AEr0Br0A         [ 2] 1674 	ldw	x, #___str_3+0
      0007F6 88               [ 1] 1675 	push	a
      0007F7 89               [ 2] 1676 	pushw	x
      0007F8 CDr01rD9         [ 4] 1677 	call	_UARTPrintF
      0007FB 5B 02            [ 2] 1678 	addw	sp, #2
      0007FD 84               [ 1] 1679 	pop	a
                                   1680 ;	se8r01-receive-car.c: 620: print_UCHAR_hex(readstatus);
      0007FE 88               [ 1] 1681 	push	a
      0007FF CDr01rF0         [ 4] 1682 	call	_print_UCHAR_hex
      000802 84               [ 1] 1683 	pop	a
                                   1684 ;	se8r01-receive-car.c: 621: readstatus = read_spi_reg(STATUS);
      000803 4B 07            [ 1] 1685 	push	#0x07
      000805 CDr00r6A         [ 4] 1686 	call	_read_spi_reg
      000808 5B 01            [ 2] 1687 	addw	sp, #1
                                   1688 ;	se8r01-receive-car.c: 622: UARTPrintF("status = \n\r");
      00080A AEr0Br16         [ 2] 1689 	ldw	x, #___str_4+0
      00080D 88               [ 1] 1690 	push	a
      00080E 89               [ 2] 1691 	pushw	x
      00080F CDr01rD9         [ 4] 1692 	call	_UARTPrintF
      000812 5B 02            [ 2] 1693 	addw	sp, #2
      000814 84               [ 1] 1694 	pop	a
                                   1695 ;	se8r01-receive-car.c: 623: print_UCHAR_hex(readstatus);
      000815 88               [ 1] 1696 	push	a
      000816 CDr01rF0         [ 4] 1697 	call	_print_UCHAR_hex
      000819 84               [ 1] 1698 	pop	a
                                   1699 ;	se8r01-receive-car.c: 627: PD_DDR |= (1 << 2) ; // output mode
      00081A AE 50 11         [ 2] 1700 	ldw	x, #0x5011
      00081D F6               [ 1] 1701 	ld	a, (x)
      00081E AA 04            [ 1] 1702 	or	a, #0x04
      000820 F7               [ 1] 1703 	ld	(x), a
                                   1704 ;	se8r01-receive-car.c: 628: PD_CR1 |= (1 << 2) ; // push-pull
      000821 AE 50 12         [ 2] 1705 	ldw	x, #0x5012
      000824 F6               [ 1] 1706 	ld	a, (x)
      000825 AA 04            [ 1] 1707 	or	a, #0x04
      000827 F7               [ 1] 1708 	ld	(x), a
                                   1709 ;	se8r01-receive-car.c: 629: PD_ODR |= (1 << 2);
      000828 AE 50 0F         [ 2] 1710 	ldw	x, #0x500f
      00082B F6               [ 1] 1711 	ld	a, (x)
      00082C AA 04            [ 1] 1712 	or	a, #0x04
      00082E F7               [ 1] 1713 	ld	(x), a
                                   1714 ;	se8r01-receive-car.c: 633: Init_Tim2 (); //pwm on pd4
      00082F CDr07r0F         [ 4] 1715 	call	_Init_Tim2
                                   1716 ;	se8r01-receive-car.c: 634: PD_DDR |= (1<<4);
      000832 AE 50 11         [ 2] 1717 	ldw	x, #0x5011
      000835 F6               [ 1] 1718 	ld	a, (x)
      000836 AA 10            [ 1] 1719 	or	a, #0x10
      000838 F7               [ 1] 1720 	ld	(x), a
                                   1721 ;	se8r01-receive-car.c: 635: PD_CR1 |= (1<<4);
      000839 AE 50 12         [ 2] 1722 	ldw	x, #0x5012
      00083C F6               [ 1] 1723 	ld	a, (x)
      00083D AA 10            [ 1] 1724 	or	a, #0x10
      00083F F7               [ 1] 1725 	ld	(x), a
                                   1726 ;	se8r01-receive-car.c: 636: PD_CR2 |= (1<<4);
      000840 AE 50 13         [ 2] 1727 	ldw	x, #0x5013
      000843 F6               [ 1] 1728 	ld	a, (x)
      000844 AA 10            [ 1] 1729 	or	a, #0x10
      000846 F7               [ 1] 1730 	ld	(x), a
                                   1731 ;	se8r01-receive-car.c: 640: PA_DDR |= (1<<3);
      000847 AE 50 02         [ 2] 1732 	ldw	x, #0x5002
      00084A F6               [ 1] 1733 	ld	a, (x)
      00084B AA 08            [ 1] 1734 	or	a, #0x08
      00084D F7               [ 1] 1735 	ld	(x), a
                                   1736 ;	se8r01-receive-car.c: 641: PA_CR1 |= (1<<3);
      00084E AE 50 03         [ 2] 1737 	ldw	x, #0x5003
      000851 F6               [ 1] 1738 	ld	a, (x)
      000852 AA 08            [ 1] 1739 	or	a, #0x08
      000854 F7               [ 1] 1740 	ld	(x), a
                                   1741 ;	se8r01-receive-car.c: 642: PA_CR2 |= (1<<4);
      000855 AE 50 04         [ 2] 1742 	ldw	x, #0x5004
      000858 F6               [ 1] 1743 	ld	a, (x)
      000859 AA 10            [ 1] 1744 	or	a, #0x10
      00085B F7               [ 1] 1745 	ld	(x), a
                                   1746 ;	se8r01-receive-car.c: 644: SE8R01_Init();
      00085C CDr06r29         [ 4] 1747 	call	_SE8R01_Init
                                   1748 ;	se8r01-receive-car.c: 645: UARTPrintF("timer initialised = \n\r");
      00085F AEr0Br22         [ 2] 1749 	ldw	x, #___str_5+0
      000862 89               [ 2] 1750 	pushw	x
      000863 CDr01rD9         [ 4] 1751 	call	_UARTPrintF
      000866 5B 02            [ 2] 1752 	addw	sp, #2
                                   1753 ;	se8r01-receive-car.c: 653: PB_DDR |= (1 << 4) | (1 << 5);  // output mode
      000868 AE 50 07         [ 2] 1754 	ldw	x, #0x5007
      00086B F6               [ 1] 1755 	ld	a, (x)
      00086C AA 30            [ 1] 1756 	or	a, #0x30
      00086E F7               [ 1] 1757 	ld	(x), a
                                   1758 ;	se8r01-receive-car.c: 654: PB_CR1 |= (1 << 4) | (1 << 5);  // push-pull
      00086F AE 50 08         [ 2] 1759 	ldw	x, #0x5008
      000872 F6               [ 1] 1760 	ld	a, (x)
      000873 AA 30            [ 1] 1761 	or	a, #0x30
      000875 F7               [ 1] 1762 	ld	(x), a
                                   1763 ;	se8r01-receive-car.c: 655: PB_CR2 |= (1 << 4) | (1 << 5);  // up to 10MHz speed
      000876 AE 50 09         [ 2] 1764 	ldw	x, #0x5009
      000879 F6               [ 1] 1765 	ld	a, (x)
      00087A AA 30            [ 1] 1766 	or	a, #0x30
      00087C F7               [ 1] 1767 	ld	(x), a
                                   1768 ;	se8r01-receive-car.c: 661: PA_DDR |= (1 << 1) | (1 << 2);  // output mode
      00087D AE 50 02         [ 2] 1769 	ldw	x, #0x5002
      000880 F6               [ 1] 1770 	ld	a, (x)
      000881 AA 06            [ 1] 1771 	or	a, #0x06
      000883 F7               [ 1] 1772 	ld	(x), a
                                   1773 ;	se8r01-receive-car.c: 662: PA_CR1 |= (1 << 1) | (1 << 2);  // push-pull
      000884 AE 50 03         [ 2] 1774 	ldw	x, #0x5003
      000887 F6               [ 1] 1775 	ld	a, (x)
      000888 AA 06            [ 1] 1776 	or	a, #0x06
      00088A F7               [ 1] 1777 	ld	(x), a
                                   1778 ;	se8r01-receive-car.c: 663: PA_CR2 |= (1 << 1) | (1 << 2);  // up to 10MHz speed
      00088B AE 50 04         [ 2] 1779 	ldw	x, #0x5004
      00088E F6               [ 1] 1780 	ld	a, (x)
      00088F AA 06            [ 1] 1781 	or	a, #0x06
      000891 F7               [ 1] 1782 	ld	(x), a
                                   1783 ;	se8r01-receive-car.c: 668: PB_ODR |= 1 << 4; //only if pwm does not work jj
      000892 AE 50 05         [ 2] 1784 	ldw	x, #0x5005
      000895 F6               [ 1] 1785 	ld	a, (x)
      000896 AA 10            [ 1] 1786 	or	a, #0x10
      000898 F7               [ 1] 1787 	ld	(x), a
                                   1788 ;	se8r01-receive-car.c: 672: PB_ODR |= 1 << 5;
      000899 AE 50 05         [ 2] 1789 	ldw	x, #0x5005
      00089C F6               [ 1] 1790 	ld	a, (x)
      00089D AA 20            [ 1] 1791 	or	a, #0x20
      00089F F7               [ 1] 1792 	ld	(x), a
                                   1793 ;	se8r01-receive-car.c: 676: while (1) {
      0008A0                       1794 00120$:
                                   1795 ;	se8r01-receive-car.c: 681: delay(1000);
      0008A0 4B E8            [ 1] 1796 	push	#0xe8
      0008A2 4B 03            [ 1] 1797 	push	#0x03
      0008A4 CDr01r8E         [ 4] 1798 	call	_delay
      0008A7 5B 02            [ 2] 1799 	addw	sp, #2
                                   1800 ;	se8r01-receive-car.c: 686: PD_ODR &= ~(1 << 2); //blink LED
      0008A9 AE 50 0F         [ 2] 1801 	ldw	x, #0x500f
      0008AC F6               [ 1] 1802 	ld	a, (x)
      0008AD A4 FB            [ 1] 1803 	and	a, #0xfb
      0008AF F7               [ 1] 1804 	ld	(x), a
                                   1805 ;	se8r01-receive-car.c: 687: delay(500);
      0008B0 4B F4            [ 1] 1806 	push	#0xf4
      0008B2 4B 01            [ 1] 1807 	push	#0x01
      0008B4 CDr01r8E         [ 4] 1808 	call	_delay
      0008B7 5B 02            [ 2] 1809 	addw	sp, #2
                                   1810 ;	se8r01-receive-car.c: 690: delay(500);
      0008B9 4B F4            [ 1] 1811 	push	#0xf4
      0008BB 4B 01            [ 1] 1812 	push	#0x01
      0008BD CDr01r8E         [ 4] 1813 	call	_delay
      0008C0 5B 02            [ 2] 1814 	addw	sp, #2
                                   1815 ;	se8r01-receive-car.c: 691: if ((PD_IDR & (1 << 3))==0) //input low
      0008C2 AE 50 10         [ 2] 1816 	ldw	x, #0x5010
      0008C5 F6               [ 1] 1817 	ld	a, (x)
      0008C6 A5 08            [ 1] 1818 	bcp	a, #0x08
      0008C8 27 03            [ 1] 1819 	jreq	00204$
      0008CA CCr0Ar9D         [ 2] 1820 	jp	00115$
      0008CD                       1821 00204$:
                                   1822 ;	se8r01-receive-car.c: 695: delay(240);
      0008CD 4B F0            [ 1] 1823 	push	#0xf0
      0008CF 4B 00            [ 1] 1824 	push	#0x00
      0008D1 CDr01r8E         [ 4] 1825 	call	_delay
      0008D4 5B 02            [ 2] 1826 	addw	sp, #2
                                   1827 ;	se8r01-receive-car.c: 696: signal_lv=read_spi_reg(iRF_BANK0_RPD);
      0008D6 4B 09            [ 1] 1828 	push	#0x09
      0008D8 CDr00r6A         [ 4] 1829 	call	_read_spi_reg
      0008DB 5B 01            [ 2] 1830 	addw	sp, #1
      0008DD C7u00u0A         [ 1] 1831 	ld	_signal_lv+0, a
                                   1832 ;	se8r01-receive-car.c: 697: status = read_spi_reg(STATUS);
      0008E0 4B 07            [ 1] 1833 	push	#0x07
      0008E2 CDr00r6A         [ 4] 1834 	call	_read_spi_reg
      0008E5 5B 01            [ 2] 1835 	addw	sp, #1
      0008E7 C7u00u0D         [ 1] 1836 	ld	_status+0, a
                                   1837 ;	se8r01-receive-car.c: 699: if(status&STA_MARK_RX)                                                 // if receive data ready (TX_DS) interrupt
      0008EA 72 06u00u0D 02   [ 2] 1838 	btjt	_status+0, #6, 00205$
      0008EF 20 5C            [ 2] 1839 	jra	00103$
      0008F1                       1840 00205$:
                                   1841 ;	se8r01-receive-car.c: 702: pip= (status & 0b00001110)>>1;
      0008F1 C6u00u0D         [ 1] 1842 	ld	a, _status+0
      0008F4 A4 0E            [ 1] 1843 	and	a, #0x0e
      0008F6 44               [ 1] 1844 	srl	a
      0008F7 5F               [ 1] 1845 	clrw	x
      0008F8 97               [ 1] 1846 	ld	xl, a
      0008F9 CFu00u0B         [ 2] 1847 	ldw	_pip+0, x
                                   1848 ;	se8r01-receive-car.c: 703: pload_width_now=read_spi_reg(iRF_CMD_R_RX_PL_WID);
      0008FC 4B 60            [ 1] 1849 	push	#0x60
      0008FE CDr00r6A         [ 4] 1850 	call	_read_spi_reg
      000901 5B 01            [ 2] 1851 	addw	sp, #1
      000903 5F               [ 1] 1852 	clrw	x
      000904 97               [ 1] 1853 	ld	xl, a
      000905 CFu00u06         [ 2] 1854 	ldw	_pload_width_now+0, x
                                   1855 ;	se8r01-receive-car.c: 704: read_spi_buf(RD_RX_PLOAD, rx_buf,32);             // read playload to rx_buf
      000908 AEr00r1E         [ 2] 1856 	ldw	x, #_rx_buf+0
      00090B 1F 41            [ 2] 1857 	ldw	(0x41, sp), x
      00090D 1E 41            [ 2] 1858 	ldw	x, (0x41, sp)
      00090F 4B 20            [ 1] 1859 	push	#0x20
      000911 89               [ 2] 1860 	pushw	x
      000912 4B 61            [ 1] 1861 	push	#0x61
      000914 CDr00rE0         [ 4] 1862 	call	_read_spi_buf
      000917 5B 04            [ 2] 1863 	addw	sp, #4
                                   1864 ;	se8r01-receive-car.c: 705: write_spi_reg(FLUSH_RX,0);
      000919 4B 00            [ 1] 1865 	push	#0x00
      00091B 4B E2            [ 1] 1866 	push	#0xe2
      00091D CDr00r2E         [ 4] 1867 	call	_write_spi_reg
      000920 5B 02            [ 2] 1868 	addw	sp, #2
                                   1869 ;	se8r01-receive-car.c: 707: newdata=1;
      000922 35 01u00u09      [ 1] 1870 	mov	_newdata+1, #0x01
      000926 72 5Fu00u08      [ 1] 1871 	clr	_newdata+0
                                   1872 ;	se8r01-receive-car.c: 708: for (teller=0;teller<32;++teller)
      00092A 5F               [ 1] 1873 	clrw	x
      00092B 1F 0E            [ 2] 1874 	ldw	(0x0e, sp), x
      00092D                       1875 00122$:
                                   1876 ;	se8r01-receive-car.c: 709: print_UCHAR_hex (rx_buf[teller]);
      00092D 1E 41            [ 2] 1877 	ldw	x, (0x41, sp)
      00092F 72 FB 0E         [ 2] 1878 	addw	x, (0x0e, sp)
      000932 F6               [ 1] 1879 	ld	a, (x)
      000933 88               [ 1] 1880 	push	a
      000934 CDr01rF0         [ 4] 1881 	call	_print_UCHAR_hex
      000937 84               [ 1] 1882 	pop	a
                                   1883 ;	se8r01-receive-car.c: 708: for (teller=0;teller<32;++teller)
      000938 1E 0E            [ 2] 1884 	ldw	x, (0x0e, sp)
      00093A 5C               [ 2] 1885 	incw	x
      00093B 1F 0E            [ 2] 1886 	ldw	(0x0e, sp), x
      00093D 1E 0E            [ 2] 1887 	ldw	x, (0x0e, sp)
      00093F A3 00 20         [ 2] 1888 	cpw	x, #0x0020
      000942 2F E9            [ 1] 1889 	jrslt	00122$
                                   1890 ;	se8r01-receive-car.c: 710: UARTPrintF("\n\r");
      000944 AEr0Br39         [ 2] 1891 	ldw	x, #___str_6+0
      000947 89               [ 2] 1892 	pushw	x
      000948 CDr01rD9         [ 4] 1893 	call	_UARTPrintF
      00094B 5B 02            [ 2] 1894 	addw	sp, #2
      00094D                       1895 00103$:
                                   1896 ;	se8r01-receive-car.c: 713: if (rx_buf[0]==0xac && rx_buf[1]==0xcc) //the first two are a code to only accept these lines in the transmitted lines to avoid errors
      00094D AEr00r1E         [ 2] 1897 	ldw	x, #_rx_buf+0
      000950 1F 36            [ 2] 1898 	ldw	(0x36, sp), x
      000952 1E 36            [ 2] 1899 	ldw	x, (0x36, sp)
      000954 F6               [ 1] 1900 	ld	a, (x)
      000955 A1 AC            [ 1] 1901 	cp	a, #0xac
      000957 27 03            [ 1] 1902 	jreq	00209$
      000959 CCr0Ar93         [ 2] 1903 	jp	00112$
      00095C                       1904 00209$:
      00095C 1E 36            [ 2] 1905 	ldw	x, (0x36, sp)
      00095E E6 01            [ 1] 1906 	ld	a, (0x1, x)
      000960 A1 CC            [ 1] 1907 	cp	a, #0xcc
      000962 27 03            [ 1] 1908 	jreq	00212$
      000964 CCr0Ar93         [ 2] 1909 	jp	00112$
      000967                       1910 00212$:
                                   1911 ;	se8r01-receive-car.c: 715: speed = (unsigned int)rx_buf[2] << 8 | (unsigned int)rx_buf[3];
      000967 1E 36            [ 2] 1912 	ldw	x, (0x36, sp)
      000969 E6 02            [ 1] 1913 	ld	a, (0x2, x)
      00096B 5F               [ 1] 1914 	clrw	x
      00096C 97               [ 1] 1915 	ld	xl, a
      00096D 58               [ 2] 1916 	sllw	x
      00096E 58               [ 2] 1917 	sllw	x
      00096F 58               [ 2] 1918 	sllw	x
      000970 58               [ 2] 1919 	sllw	x
      000971 58               [ 2] 1920 	sllw	x
      000972 58               [ 2] 1921 	sllw	x
      000973 58               [ 2] 1922 	sllw	x
      000974 58               [ 2] 1923 	sllw	x
      000975 16 36            [ 2] 1924 	ldw	y, (0x36, sp)
      000977 90 E6 03         [ 1] 1925 	ld	a, (0x3, y)
      00097A 0F 38            [ 1] 1926 	clr	(0x38, sp)
      00097C 89               [ 2] 1927 	pushw	x
      00097D 1A 02            [ 1] 1928 	or	a, (2, sp)
      00097F 85               [ 2] 1929 	popw	x
      000980 6B 0D            [ 1] 1930 	ld	(0x0d, sp), a
      000982 9E               [ 1] 1931 	ld	a, xh
      000983 1A 38            [ 1] 1932 	or	a, (0x38, sp)
      000985 6B 0C            [ 1] 1933 	ld	(0x0c, sp), a
                                   1934 ;	se8r01-receive-car.c: 716: if ((speed <= 0x0210) && (speed >= 0x0190)) {
      000987 1E 0C            [ 2] 1935 	ldw	x, (0x0c, sp)
      000989 A3 02 10         [ 2] 1936 	cpw	x, #0x0210
      00098C 2C 04            [ 1] 1937 	jrsgt	00213$
      00098E 0F 45            [ 1] 1938 	clr	(0x45, sp)
      000990 20 04            [ 2] 1939 	jra	00214$
      000992                       1940 00213$:
      000992 A6 01            [ 1] 1941 	ld	a, #0x01
      000994 6B 45            [ 1] 1942 	ld	(0x45, sp), a
      000996                       1943 00214$:
      000996 1E 0C            [ 2] 1944 	ldw	x, (0x0c, sp)
      000998 A3 01 90         [ 2] 1945 	cpw	x, #0x0190
      00099B 2F 04            [ 1] 1946 	jrslt	00215$
      00099D 0F 40            [ 1] 1947 	clr	(0x40, sp)
      00099F 20 04            [ 2] 1948 	jra	00216$
      0009A1                       1949 00215$:
      0009A1 A6 01            [ 1] 1950 	ld	a, #0x01
      0009A3 6B 40            [ 1] 1951 	ld	(0x40, sp), a
      0009A5                       1952 00216$:
      0009A5 0D 45            [ 1] 1953 	tnz	(0x45, sp)
      0009A7 26 1A            [ 1] 1954 	jrne	00105$
      0009A9 0D 40            [ 1] 1955 	tnz	(0x40, sp)
      0009AB 26 16            [ 1] 1956 	jrne	00105$
                                   1957 ;	se8r01-receive-car.c: 717: PA_ODR &= ~(1 << 2);
      0009AD AE 50 00         [ 2] 1958 	ldw	x, #0x5000
      0009B0 F6               [ 1] 1959 	ld	a, (x)
      0009B1 A4 FB            [ 1] 1960 	and	a, #0xfb
      0009B3 F7               [ 1] 1961 	ld	(x), a
                                   1962 ;	se8r01-receive-car.c: 718: PA_ODR &= ~(1 << 1);
      0009B4 AE 50 00         [ 2] 1963 	ldw	x, #0x5000
      0009B7 F6               [ 1] 1964 	ld	a, (x)
      0009B8 A4 FD            [ 1] 1965 	and	a, #0xfd
      0009BA F7               [ 1] 1966 	ld	(x), a
                                   1967 ;	se8r01-receive-car.c: 719: TIM2_CCR1H = 0; //compare capture register value for channel 1
      0009BB AE 53 11         [ 2] 1968 	ldw	x, #0x5311
      0009BE 7F               [ 1] 1969 	clr	(x)
                                   1970 ;	se8r01-receive-car.c: 720: TIM2_CCR1L = 0;
      0009BF AE 53 12         [ 2] 1971 	ldw	x, #0x5312
      0009C2 7F               [ 1] 1972 	clr	(x)
      0009C3                       1973 00105$:
                                   1974 ;	se8r01-receive-car.c: 725: if (speed > 0x0210) { //forward
      0009C3 0D 45            [ 1] 1975 	tnz	(0x45, sp)
      0009C5 27 41            [ 1] 1976 	jreq	00108$
                                   1977 ;	se8r01-receive-car.c: 726: PA_ODR &= ~(1 << 2);
      0009C7 AE 50 00         [ 2] 1978 	ldw	x, #0x5000
      0009CA F6               [ 1] 1979 	ld	a, (x)
      0009CB A4 FB            [ 1] 1980 	and	a, #0xfb
      0009CD F7               [ 1] 1981 	ld	(x), a
                                   1982 ;	se8r01-receive-car.c: 727: PA_ODR |= 1 << 1;
      0009CE AE 50 00         [ 2] 1983 	ldw	x, #0x5000
      0009D1 F6               [ 1] 1984 	ld	a, (x)
      0009D2 AA 02            [ 1] 1985 	or	a, #0x02
      0009D4 F7               [ 1] 1986 	ld	(x), a
                                   1987 ;	se8r01-receive-car.c: 728: TIM2_CCR1H =(speed-500)*40/256; //compare capture register value for channel 1
      0009D5 1E 0C            [ 2] 1988 	ldw	x, (0x0c, sp)
      0009D7 1D 01 F4         [ 2] 1989 	subw	x, #0x01f4
      0009DA 89               [ 2] 1990 	pushw	x
      0009DB 4B 28            [ 1] 1991 	push	#0x28
      0009DD 4B 00            [ 1] 1992 	push	#0x00
      0009DF CDr00r00         [ 4] 1993 	call	__mulint
      0009E2 5B 04            [ 2] 1994 	addw	sp, #4
      0009E4 1F 3A            [ 2] 1995 	ldw	(0x3a, sp), x
      0009E6 4B 00            [ 1] 1996 	push	#0x00
      0009E8 4B 01            [ 1] 1997 	push	#0x01
      0009EA 1E 3C            [ 2] 1998 	ldw	x, (0x3c, sp)
      0009EC 89               [ 2] 1999 	pushw	x
      0009ED CDr00r00         [ 4] 2000 	call	__divsint
      0009F0 5B 04            [ 2] 2001 	addw	sp, #4
      0009F2 9F               [ 1] 2002 	ld	a, xl
      0009F3 AE 53 11         [ 2] 2003 	ldw	x, #0x5311
      0009F6 F7               [ 1] 2004 	ld	(x), a
                                   2005 ;	se8r01-receive-car.c: 729: TIM2_CCR1L =(speed-500)*40%256;
      0009F7 4B 00            [ 1] 2006 	push	#0x00
      0009F9 4B 01            [ 1] 2007 	push	#0x01
      0009FB 1E 3C            [ 2] 2008 	ldw	x, (0x3c, sp)
      0009FD 89               [ 2] 2009 	pushw	x
      0009FE CDr00r00         [ 4] 2010 	call	__modsint
      000A01 5B 04            [ 2] 2011 	addw	sp, #4
      000A03 9F               [ 1] 2012 	ld	a, xl
      000A04 AE 53 12         [ 2] 2013 	ldw	x, #0x5312
      000A07 F7               [ 1] 2014 	ld	(x), a
      000A08                       2015 00108$:
                                   2016 ;	se8r01-receive-car.c: 731: if (speed < 0x0190) { //reverse
      000A08 0D 40            [ 1] 2017 	tnz	(0x40, sp)
      000A0A 27 42            [ 1] 2018 	jreq	00110$
                                   2019 ;	se8r01-receive-car.c: 732: PA_ODR &= ~(1 << 1);
      000A0C AE 50 00         [ 2] 2020 	ldw	x, #0x5000
      000A0F F6               [ 1] 2021 	ld	a, (x)
      000A10 A4 FD            [ 1] 2022 	and	a, #0xfd
      000A12 F7               [ 1] 2023 	ld	(x), a
                                   2024 ;	se8r01-receive-car.c: 733: PA_ODR |= 1 << 2;
      000A13 AE 50 00         [ 2] 2025 	ldw	x, #0x5000
      000A16 F6               [ 1] 2026 	ld	a, (x)
      000A17 AA 04            [ 1] 2027 	or	a, #0x04
      000A19 F7               [ 1] 2028 	ld	(x), a
                                   2029 ;	se8r01-receive-car.c: 734: TIM2_CCR1H =(500-speed)*40/256; //compare capture register value for channel 1
      000A1A AE 01 F4         [ 2] 2030 	ldw	x, #0x01f4
      000A1D 72 F0 0C         [ 2] 2031 	subw	x, (0x0c, sp)
      000A20 89               [ 2] 2032 	pushw	x
      000A21 4B 28            [ 1] 2033 	push	#0x28
      000A23 4B 00            [ 1] 2034 	push	#0x00
      000A25 CDr00r00         [ 4] 2035 	call	__mulint
      000A28 5B 04            [ 2] 2036 	addw	sp, #4
      000A2A 1F 43            [ 2] 2037 	ldw	(0x43, sp), x
      000A2C 4B 00            [ 1] 2038 	push	#0x00
      000A2E 4B 01            [ 1] 2039 	push	#0x01
      000A30 1E 45            [ 2] 2040 	ldw	x, (0x45, sp)
      000A32 89               [ 2] 2041 	pushw	x
      000A33 CDr00r00         [ 4] 2042 	call	__divsint
      000A36 5B 04            [ 2] 2043 	addw	sp, #4
      000A38 9F               [ 1] 2044 	ld	a, xl
      000A39 AE 53 11         [ 2] 2045 	ldw	x, #0x5311
      000A3C F7               [ 1] 2046 	ld	(x), a
                                   2047 ;	se8r01-receive-car.c: 735: TIM2_CCR1L =(500-speed)*40%256;
      000A3D 4B 00            [ 1] 2048 	push	#0x00
      000A3F 4B 01            [ 1] 2049 	push	#0x01
      000A41 1E 45            [ 2] 2050 	ldw	x, (0x45, sp)
      000A43 89               [ 2] 2051 	pushw	x
      000A44 CDr00r00         [ 4] 2052 	call	__modsint
      000A47 5B 04            [ 2] 2053 	addw	sp, #4
      000A49 9F               [ 1] 2054 	ld	a, xl
      000A4A AE 53 12         [ 2] 2055 	ldw	x, #0x5312
      000A4D F7               [ 1] 2056 	ld	(x), a
      000A4E                       2057 00110$:
                                   2058 ;	se8r01-receive-car.c: 738: angle = (unsigned int)rx_buf[4] << 8 | (unsigned int)rx_buf[5]; //angle of servo motor
      000A4E 1E 36            [ 2] 2059 	ldw	x, (0x36, sp)
      000A50 E6 04            [ 1] 2060 	ld	a, (0x4, x)
      000A52 5F               [ 1] 2061 	clrw	x
      000A53 97               [ 1] 2062 	ld	xl, a
      000A54 58               [ 2] 2063 	sllw	x
      000A55 58               [ 2] 2064 	sllw	x
      000A56 58               [ 2] 2065 	sllw	x
      000A57 58               [ 2] 2066 	sllw	x
      000A58 58               [ 2] 2067 	sllw	x
      000A59 58               [ 2] 2068 	sllw	x
      000A5A 58               [ 2] 2069 	sllw	x
      000A5B 58               [ 2] 2070 	sllw	x
      000A5C 16 36            [ 2] 2071 	ldw	y, (0x36, sp)
      000A5E 90 E6 05         [ 1] 2072 	ld	a, (0x5, y)
      000A61 0F 3E            [ 1] 2073 	clr	(0x3e, sp)
      000A63 89               [ 2] 2074 	pushw	x
      000A64 1A 02            [ 1] 2075 	or	a, (2, sp)
      000A66 85               [ 2] 2076 	popw	x
      000A67 97               [ 1] 2077 	ld	xl, a
      000A68 9E               [ 1] 2078 	ld	a, xh
      000A69 1A 3E            [ 1] 2079 	or	a, (0x3e, sp)
      000A6B 95               [ 1] 2080 	ld	xh, a
                                   2081 ;	se8r01-receive-car.c: 739: TIM2_CCR3H =(1000+angle)/256; //compare capture register value
      000A6C 1C 03 E8         [ 2] 2082 	addw	x, #0x03e8
      000A6F 1F 3C            [ 2] 2083 	ldw	(0x3c, sp), x
      000A71 4B 00            [ 1] 2084 	push	#0x00
      000A73 4B 01            [ 1] 2085 	push	#0x01
      000A75 1E 3E            [ 2] 2086 	ldw	x, (0x3e, sp)
      000A77 89               [ 2] 2087 	pushw	x
      000A78 CDr00r00         [ 4] 2088 	call	__divsint
      000A7B 5B 04            [ 2] 2089 	addw	sp, #4
      000A7D 9F               [ 1] 2090 	ld	a, xl
      000A7E AE 53 15         [ 2] 2091 	ldw	x, #0x5315
      000A81 F7               [ 1] 2092 	ld	(x), a
                                   2093 ;	se8r01-receive-car.c: 740: TIM2_CCR3L =(1000+angle)%256;
      000A82 4B 00            [ 1] 2094 	push	#0x00
      000A84 4B 01            [ 1] 2095 	push	#0x01
      000A86 1E 3E            [ 2] 2096 	ldw	x, (0x3e, sp)
      000A88 89               [ 2] 2097 	pushw	x
      000A89 CDr00r00         [ 4] 2098 	call	__modsint
      000A8C 5B 04            [ 2] 2099 	addw	sp, #4
      000A8E 9F               [ 1] 2100 	ld	a, xl
      000A8F AE 53 16         [ 2] 2101 	ldw	x, #0x5316
      000A92 F7               [ 1] 2102 	ld	(x), a
      000A93                       2103 00112$:
                                   2104 ;	se8r01-receive-car.c: 742: write_spi_reg(WRITE_REG+STATUS,status);       // clear RX_DR or TX_DS or MAX_RT interrupt flag
      000A93 3Bu00u0D         [ 1] 2105 	push	_status+0
      000A96 4B 27            [ 1] 2106 	push	#0x27
      000A98 CDr00r2E         [ 4] 2107 	call	_write_spi_reg
      000A9B 5B 02            [ 2] 2108 	addw	sp, #2
      000A9D                       2109 00115$:
                                   2110 ;	se8r01-receive-car.c: 747: for (x1 = 0; x1 < 50; ++x1)
      000A9D 5F               [ 1] 2111 	clrw	x
      000A9E 1F 0A            [ 2] 2112 	ldw	(0x0a, sp), x
      000AA0                       2113 00131$:
      000AA0 1E 0A            [ 2] 2114 	ldw	x, (0x0a, sp)
      000AA2 A3 00 32         [ 2] 2115 	cpw	x, #0x0032
      000AA5 2F 03            [ 1] 2116 	jrslt	00221$
      000AA7 CCr08rA0         [ 2] 2117 	jp	00120$
      000AAA                       2118 00221$:
                                   2119 ;	se8r01-receive-car.c: 748: for (y1 = 0; y1 < 50; ++y1)
      000AAA 5F               [ 1] 2120 	clrw	x
      000AAB 1F 08            [ 2] 2121 	ldw	(0x08, sp), x
      000AAD                       2122 00128$:
      000AAD 1E 08            [ 2] 2123 	ldw	x, (0x08, sp)
      000AAF A3 00 32         [ 2] 2124 	cpw	x, #0x0032
      000AB2 2E 19            [ 1] 2125 	jrsge	00132$
                                   2126 ;	se8r01-receive-car.c: 749: for (z1 = 0; z1 < 50; ++z1)
      000AB4 5F               [ 1] 2127 	clrw	x
      000AB5 1F 06            [ 2] 2128 	ldw	(0x06, sp), x
      000AB7                       2129 00125$:
      000AB7 1E 06            [ 2] 2130 	ldw	x, (0x06, sp)
      000AB9 A3 00 32         [ 2] 2131 	cpw	x, #0x0032
      000ABC 2E 08            [ 1] 2132 	jrsge	00129$
                                   2133 ;	se8r01-receive-car.c: 750: __asm__("nop");
      000ABE 9D               [ 1] 2134 	nop
                                   2135 ;	se8r01-receive-car.c: 749: for (z1 = 0; z1 < 50; ++z1)
      000ABF 1E 06            [ 2] 2136 	ldw	x, (0x06, sp)
      000AC1 5C               [ 2] 2137 	incw	x
      000AC2 1F 06            [ 2] 2138 	ldw	(0x06, sp), x
      000AC4 20 F1            [ 2] 2139 	jra	00125$
      000AC6                       2140 00129$:
                                   2141 ;	se8r01-receive-car.c: 748: for (y1 = 0; y1 < 50; ++y1)
      000AC6 1E 08            [ 2] 2142 	ldw	x, (0x08, sp)
      000AC8 5C               [ 2] 2143 	incw	x
      000AC9 1F 08            [ 2] 2144 	ldw	(0x08, sp), x
      000ACB 20 E0            [ 2] 2145 	jra	00128$
      000ACD                       2146 00132$:
                                   2147 ;	se8r01-receive-car.c: 747: for (x1 = 0; x1 < 50; ++x1)
      000ACD 1E 0A            [ 2] 2148 	ldw	x, (0x0a, sp)
      000ACF 5C               [ 2] 2149 	incw	x
      000AD0 1F 0A            [ 2] 2150 	ldw	(0x0a, sp), x
      000AD2 20 CC            [ 2] 2151 	jra	00131$
      000AD4 5B 45            [ 2] 2152 	addw	sp, #69
      000AD6 81               [ 4] 2153 	ret
                                   2154 	.area CODE
      000AD7                       2155 ___str_0:
      000AD7 74 69 6D 65 72 20 69  2156 	.ascii "timer init 1 = "
             6E 69 74 20 31 20 3D
             20
      000AE6 0A                    2157 	.db 0x0A
      000AE7 0D                    2158 	.db 0x0D
      000AE8 00                    2159 	.db 0x00
      000AE9                       2160 ___str_1:
      000AE9 74 69 6D 65 72 20 69  2161 	.ascii "timer init 2 = "
             6E 69 74 20 32 20 3D
             20
      000AF8 0A                    2162 	.db 0x0A
      000AF9 0D                    2163 	.db 0x0D
      000AFA 00                    2164 	.db 0x00
      000AFB                       2165 ___str_2:
      000AFB 73 74 61 72 74 20 64  2166 	.ascii "start debug "
             65 62 75 67 20
      000B07 0A                    2167 	.db 0x0A
      000B08 0D                    2168 	.db 0x0D
      000B09 00                    2169 	.db 0x00
      000B0A                       2170 ___str_3:
      000B0A 63 6F 6E 66 69 67 20  2171 	.ascii "config = "
             3D 20
      000B13 0A                    2172 	.db 0x0A
      000B14 0D                    2173 	.db 0x0D
      000B15 00                    2174 	.db 0x00
      000B16                       2175 ___str_4:
      000B16 73 74 61 74 75 73 20  2176 	.ascii "status = "
             3D 20
      000B1F 0A                    2177 	.db 0x0A
      000B20 0D                    2178 	.db 0x0D
      000B21 00                    2179 	.db 0x00
      000B22                       2180 ___str_5:
      000B22 74 69 6D 65 72 20 69  2181 	.ascii "timer initialised = "
             6E 69 74 69 61 6C 69
             73 65 64 20 3D 20
      000B36 0A                    2182 	.db 0x0A
      000B37 0D                    2183 	.db 0x0D
      000B38 00                    2184 	.db 0x00
      000B39                       2185 ___str_6:
      000B39 0A                    2186 	.db 0x0A
      000B3A 0D                    2187 	.db 0x0D
      000B3B 00                    2188 	.db 0x00
                                   2189 	.area INITIALIZER
      000000                       2190 __xinit__SE8R01_DR_2M:
      000000 00 00                 2191 	.dw #0x0000
      000002                       2192 __xinit__SE8R01_DR_1M:
      000002 00 00                 2193 	.dw #0x0000
      000004                       2194 __xinit__SE8R01_DR_500K:
      000004 00 01                 2195 	.dw #0x0001
      000006                       2196 __xinit__pload_width_now:
      000006 00 00                 2197 	.dw #0x0000
      000008                       2198 __xinit__newdata:
      000008 00 00                 2199 	.dw #0x0000
      00000A                       2200 __xinit__signal_lv:
      00000A 00                    2201 	.db #0x00	;  0
      00000B                       2202 __xinit__pip:
      00000B 00 00                 2203 	.dw #0x0000
      00000D                       2204 __xinit__status:
      00000D 00                    2205 	.db #0x00	; 0
      00000E                       2206 __xinit__TX_ADDRESS:
      00000E B3                    2207 	.db #0xB3	; 179
      00000F 43                    2208 	.db #0x43	; 67	'C'
      000010 10                    2209 	.db #0x10	; 16
      000011 10                    2210 	.db #0x10	; 16
      000012                       2211 __xinit__ADDRESS2:
      000012 B1                    2212 	.db #0xB1	; 177
      000013                       2213 __xinit__ADDRESS3:
      000013 B2                    2214 	.db #0xB2	; 178
      000014                       2215 __xinit__ADDRESS4:
      000014 B3                    2216 	.db #0xB3	; 179
      000015                       2217 __xinit__ADDRESS5:
      000015 B4                    2218 	.db #0xB4	; 180
      000016                       2219 __xinit__ADDRESS1:
      000016 B0                    2220 	.db #0xB0	; 176
      000017 43                    2221 	.db #0x43	; 67	'C'
      000018 10                    2222 	.db #0x10	; 16
      000019 10                    2223 	.db #0x10	; 16
      00001A                       2224 __xinit__ADDRESS0:
      00001A 34                    2225 	.db #0x34	; 52	'4'
      00001B 43                    2226 	.db #0x43	; 67	'C'
      00001C 10                    2227 	.db #0x10	; 16
      00001D 10                    2228 	.db #0x10	; 16
      00001E                       2229 __xinit__rx_buf:
      00001E 00                    2230 	.db #0x00	; 0
      00001F 00                    2231 	.db 0x00
      000020 00                    2232 	.db 0x00
      000021 00                    2233 	.db 0x00
      000022 00                    2234 	.db 0x00
      000023 00                    2235 	.db 0x00
      000024 00                    2236 	.db 0x00
      000025 00                    2237 	.db 0x00
      000026 00                    2238 	.db 0x00
      000027 00                    2239 	.db 0x00
      000028 00                    2240 	.db 0x00
      000029 00                    2241 	.db 0x00
      00002A 00                    2242 	.db 0x00
      00002B 00                    2243 	.db 0x00
      00002C 00                    2244 	.db 0x00
      00002D 00                    2245 	.db 0x00
      00002E 00                    2246 	.db 0x00
      00002F 00                    2247 	.db 0x00
      000030 00                    2248 	.db 0x00
      000031 00                    2249 	.db 0x00
      000032 00                    2250 	.db 0x00
      000033 00                    2251 	.db 0x00
      000034 00                    2252 	.db 0x00
      000035 00                    2253 	.db 0x00
      000036 00                    2254 	.db 0x00
      000037 00                    2255 	.db 0x00
      000038 00                    2256 	.db 0x00
      000039 00                    2257 	.db 0x00
      00003A 00                    2258 	.db 0x00
      00003B 00                    2259 	.db 0x00
      00003C 00                    2260 	.db 0x00
      00003D 00                    2261 	.db 0x00
      00003E                       2262 __xinit__tx_buf:
      00003E 00                    2263 	.db #0x00	; 0
      00003F 00                    2264 	.db 0x00
      000040 00                    2265 	.db 0x00
      000041 00                    2266 	.db 0x00
      000042 00                    2267 	.db 0x00
      000043 00                    2268 	.db 0x00
      000044 00                    2269 	.db 0x00
      000045 00                    2270 	.db 0x00
      000046 00                    2271 	.db 0x00
      000047 00                    2272 	.db 0x00
      000048 00                    2273 	.db 0x00
      000049 00                    2274 	.db 0x00
      00004A 00                    2275 	.db 0x00
      00004B 00                    2276 	.db 0x00
      00004C 00                    2277 	.db 0x00
      00004D 00                    2278 	.db 0x00
      00004E 00                    2279 	.db 0x00
      00004F 00                    2280 	.db 0x00
      000050 00                    2281 	.db 0x00
      000051 00                    2282 	.db 0x00
      000052 00                    2283 	.db 0x00
      000053 00                    2284 	.db 0x00
      000054 00                    2285 	.db 0x00
      000055 00                    2286 	.db 0x00
      000056 00                    2287 	.db 0x00
      000057 00                    2288 	.db 0x00
      000058 00                    2289 	.db 0x00
      000059 00                    2290 	.db 0x00
      00005A 00                    2291 	.db 0x00
      00005B 00                    2292 	.db 0x00
      00005C 00                    2293 	.db 0x00
      00005D 00                    2294 	.db 0x00
                                   2295 	.area CABS (ABS)
